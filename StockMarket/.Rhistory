library(rvest)
install.packages("rvest")
library(rvest)
install.packages("httr")
install.packages("magrittr")
install.packages("sqldf")
install.packages("ggplot2")
GetReviewReport <- function() {     Result <- data.frame(company = 0, companyN = 0, comment = 0, date = 0, type = 0);     Result <- Result[0,];     for (i in 1:5) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             if (TRUE) {                 reviewURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb14?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(reviewURL, encoding = "UTF-8");                 CompanyR <- Source %>% html_nodes(css = "td:nth-child(1)") %>% html_text;                 Length <- length(CompanyR);                 if (Length == 0) break;                 CompanyNR <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                 CommentR <- Source %>% html_nodes(css = "td:nth-child(7)") %>% html_text;                 result <- data.frame(company = c(1:Length), companyN = c(1:Length), comment = c(1:Length), date = c(1:Length), type = c(1:Length));                 result$company <- CompanyR;                 result$companyN <- CompanyNR;                 result$comment <- CommentR;                 result$date <- date;                 if (j == 4) { result$type <- 'Year'; } else { result$type <- 'Season'; }                 Result <- rbind(Result, result);                 Sys.sleep(sample(2:5, size = 1));             }         }     }     Result$comment <- trimws(Result$comment);     Result <- Result[Result$comment == '無保留意見',];     return(Result) }
d <- GetReviewReport()
library(rvest)
library(httr)
library(magrittr)
library(sqldf)
library(ggplot2)
d <- GetReviewReport()
aa<-c(1,3,23,4)
aa %>% length()
install.packages("rvest")
library(rvest)
library(httr)
library(magrittr)
library(sqldf)
library(ggplot2)
GetReviewReport <- function() {     Result <- data.frame(company = 0, companyN = 0, comment = 0, date = 0, type = 0);     Result <- Result[0,];     for (i in 1:5) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             if (TRUE) {                 reviewURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb14?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(reviewURL, encoding = "UTF-8");                 CompanyR <- Source %>% html_nodes(css = "td:nth-child(1)") %>% html_text;                 Length <- length(CompanyR);                 if (Length == 0) break;                 CompanyNR <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                 CommentR <- Source %>% html_nodes(css = "td:nth-child(7)") %>% html_text;                 result <- data.frame(company = c(1:Length), companyN = c(1:Length), comment = c(1:Length), date = c(1:Length), type = c(1:Length));                 result$company <- CompanyR;                 result$companyN <- CompanyNR;                 result$comment <- CommentR;                 result$date <- date;                 if (j == 4) { result$type <- 'Year'; } else { result$type <- 'Season'; }                 Result <- rbind(Result, result);                 Sys.sleep(sample(2:5, size = 1));             }         }     }     Result$comment <- trimws(Result$comment);     Result <- Result[Result$comment == '無保留意見',];     return(Result) }
d <- GetReviewReport()
library(rvest)
library(httr)
library(magrittr)
library(sqldf)
library(ggplot2)
install.packages("rvest")
install.packages("httr")
install.packages("magrittr")
install.packages("sqldf")
install.packages("ggplot2")
library(rvest)
library(httr)
library(magrittr)
library(sqldf)
library(ggplot2)
GetReviewReport <- function() {     Result <- data.frame(company = 0, companyN = 0, comment = 0, date = 0, type = 0);     Result <- Result[0,];     for (i in 1:5) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             if (TRUE) {                 reviewURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb14?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(reviewURL, encoding = "UTF-8");                 CompanyR <- Source %>% html_nodes(css = "td:nth-child(1)") %>% html_text;                 Length <- length(CompanyR);                 if (Length == 0) break;                 CompanyNR <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                 CommentR <- Source %>% html_nodes(css = "td:nth-child(7)") %>% html_text;                 result <- data.frame(company = c(1:Length), companyN = c(1:Length), comment = c(1:Length), date = c(1:Length), type = c(1:Length));                 result$company <- CompanyR;                 result$companyN <- CompanyNR;                 result$comment <- CommentR;                 result$date <- date;                 if (j == 4) { result$type <- 'Year'; } else { result$type <- 'Season'; }                 Result <- rbind(Result, result);                 Sys.sleep(sample(2:5, size = 1));             }         }     }     Result$comment <- trimws(Result$comment);     Result <- Result[Result$comment == '無保留意見',];     return(Result) }
d <- GetReviewReport()
aa<-c(1,3,23,4)
aa %>% length()
library(rvest)
bsURL <- "http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=106&season=01" Source <- read_html(bsURL, encoding = "UTF-8"); All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text; length(All)
GetReviewReport <- function() {     Result <- data.frame(company = 0, companyN = 0, comment = 0, date = 0, type = 0);     Result <- Result[0,];     for (i in 1:5) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             if (TRUE) {                 reviewURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb14?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(reviewURL, encoding = "UTF-8");                 CompanyR <- Source %>% html_nodes(css = "td:nth-child(1)") %>% html_text;                 Length <- length(CompanyR);                 if (Length == 0) break;                 CompanyNR <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                 CommentR <- Source %>% html_nodes(css = "td:nth-child(7)") %>% html_text;                 result <- data.frame(company = c(1:Length), companyN = c(1:Length), comment = c(1:Length), date = c(1:Length), type = c(1:Length));                 result$company <- CompanyR;                 result$companyN <- CompanyNR;                 result$comment <- CommentR;                 result$date <- date;                 if (j == 4) { result$type <- 'Year'; } else { result$type <- 'Season'; }                 Result <- rbind(Result, result);                 Sys.sleep(sample(2:5, size = 1));             }         }     }     Result$comment <- trimws(Result$comment);     Result <- Result[Result$comment == '無保留意見',];     return(Result) }
d <- GetReviewReport()
GetIndex <- function(All) {     Index <- grep(pattern = "[0-9]{4}", All)     Result <- data.frame(RowS = c(1:length(Index)), RowD = c(1:length(Index)), RowE = c(1:length(Index)), ColS = c(1:length(Index)), ColE = c(1:length(Index)));     Result$RowS <- Index;     for (i in 1:length(Index)) {         if (i == length(Index)) {             Result$RowD[i] = Result$RowD[i - 1];         } else {             Result$RowD[i] = Result$RowS[i + 1] - Result$RowS[i];         }     }     for (i in 1:length(Index)) {         if (i == length(Index) | i == 1) {             Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;             Result$ColS[i] = 0;             Result$ColE[i] = 0;         } else {             if (Result$RowD[i] == Result$RowD[i + 1] | Result$RowD[i] == Result$RowD[i - 1]) {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;                 Result$ColS[i] = 0;                 Result$ColE[i] = 0;             } else {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - Result$RowD[i + 1] - 1;                 Result$ColS[i] = Result$RowE[i] + 1;                 Result$ColE[i] = Result$RowS[i + 1] - 1;             }         }     }     return(Result) } GetbsRaw <- function(IndexD, All) {     inde <- 1;     listresult <- list();     for (i in 1:nrow(IndexD)) {         if (i == 1) {             HED <- All[c(1:IndexD$RowD[i])];             listresult[[i]] <- data.frame(matrix(ncol = length(HED), nrow = 0));             colnames(listresult[[i]]) <- HED;             listresult[[i]] <- rbind(listresult[[i]][1,], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         } else {             if (IndexD$ColS[i] != 0) {                 inde <- inde + 1;                 listresult[[inde - 1]] <- rbind(listresult[[inde - 1]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);                 HED <- All[c(IndexD$ColS[i]:IndexD$ColE[i])];                 listresult[[inde]] <- data.frame(matrix(ncol = length(HED), nrow = 0));                 colnames(listresult[[inde]]) <- HED;                 listresult[[inde]] <- rbind(listresult[[inde]][1,], rep(NA, length(HED)));                 next;             }             listresult[[inde]] <- rbind(listresult[[inde]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         }     }     return(listresult) } ClearbsRaw <- function(bsraw, date) {     for (i in 1:length(bsraw)) {         bsraw[[i]] <- bsraw[[i]][complete.cases(bsraw[[i]]),];         bsraw[[i]][, "date"] <- date;     }     return(bsraw) } Getbsreport <- function() {     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:1) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:length(listseason)) {                     listall[[k]] <- rbind(listall[[k]], listseason[[k]])                 }                 Sys.sleep(sample(2:5, size = 1));             }         }     }     return(listall) }
bsreport <- Getbsreport();
lapply("1",scale)
lapply(1,scale)
as.numeric("2,1")
as.numeric("21")
library(rvest) library(httr) library(magrittr) library(sqldf) library(ggplot2)
GetIndex <- function(All) {     Index <- grep(pattern = "[0-9]{4}", All)     Result <- data.frame(RowS = c(1:length(Index)), RowD = c(1:length(Index)), RowE = c(1:length(Index)), ColS = c(1:length(Index)), ColE = c(1:length(Index)));     Result$RowS <- Index;     for (i in 1:length(Index)) {         if (i == length(Index)) {             Result$RowD[i] = Result$RowD[i - 1];         } else {             Result$RowD[i] = Result$RowS[i + 1] - Result$RowS[i];         }     }     for (i in 1:length(Index)) {         if (i == length(Index) | i == 1) {             Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;             Result$ColS[i] = 0;             Result$ColE[i] = 0;         } else {             if (Result$RowD[i] == Result$RowD[i + 1] | Result$RowD[i] == Result$RowD[i - 1]) {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;                 Result$ColS[i] = 0;                 Result$ColE[i] = 0;             } else {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - Result$RowD[i + 1] - 1;                 Result$ColS[i] = Result$RowE[i] + 1;                 Result$ColE[i] = Result$RowS[i + 1] - 1;             }         }     }     return(Result) } GetbsRaw <- function(IndexD, All) {     inde <- 1;     listresult <- list();     for (i in 1:nrow(IndexD)) {         if (i == 1) {             HED <- All[c(1:IndexD$RowD[i])];             listresult[[i]] <- data.frame(matrix(ncol = length(HED), nrow = 0));             colnames(listresult[[i]]) <- HED;             listresult[[i]] <- rbind(listresult[[i]][1,], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         } else {             if (IndexD$ColS[i] != 0) {                 inde <- inde + 1;                 listresult[[inde - 1]] <- rbind(listresult[[inde - 1]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);                 HED <- All[c(IndexD$ColS[i]:IndexD$ColE[i])];                 listresult[[inde]] <- data.frame(matrix(ncol = length(HED), nrow = 0));                 colnames(listresult[[inde]]) <- HED;                 listresult[[inde]] <- rbind(listresult[[inde]][1,], rep(NA, length(HED)));                 next;             }             listresult[[inde]] <- rbind(listresult[[inde]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         }     }     return(listresult) } ClearbsRaw <- function(bsraw, date) {     for (i in 1:length(bsraw)) {         bsraw[[i]] <- bsraw[[i]][complete.cases(bsraw[[i]]),];         bsraw[[i]][, "date"] <- date;     }     return(bsraw) } Getbsreport <- function() {     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:1) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:length(listseason)) {                     listall[[k]] <- rbind(listall[[k]], listseason[[k]])                 }                 Sys.sleep(sample(2:5, size = 1));             }         }     }     return(listall) }
Getbsreport <- function() {     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:1) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:length(listseason)) {                     listall[[k]] <- rbind(listall[[k]], listseason[[k]])                 }                 Sys.sleep(sample(2:3, size = 1));             }         }     }     return(listall) }
bsreport <- Getbsreport();
bsreport <- Getbsreport();
Getbsreport <- function() {     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:2) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:length(listseason)) {                     listall[[k]] <- rbind(listall[[k]], listseason[[k]])                 }                 Sys.sleep(sample(2:3, size = 1));             }         }     }     return(listall) }
bsreport <- Getbsreport();
bsreport[[1]][2,]
bsreport[[1]][2,"公司代號"]
bsreport[[1]][,c("公司代號","公司名稱")]
Parametert <- list(c("0", "0"), c("公司代號", "公司名稱", "現金及約當現金", "應收款項－淨額", "資產總額"))
Parametert[1]
Parametert[2]
Getbsreport <- function() {     Parameter<-list(c("公司代號","公司名稱","現金及約當現金","應收款項－淨額","資產總額"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:3) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:1) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[k]])                 }                 Sys.sleep(sample(2:3, size = 1));             }         }     }     return(listall) }
Parametert <- list( c("公司代號", "公司名稱", "現金及約當現金", "應收款項－淨額", "資產總額"))
Parametert[2]
Parametert[1]
bsreport <- Getbsreport();
Getbsreport <- function() {     Parameter<-list(c("公司代號","公司名稱","現金及約當現金","應收款項－淨額","資產總額"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:3) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:1) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]])                 }                 Sys.sleep(sample(2:3, size = 1));             }         }     }     return(listall) }
bsreport <- Getbsreport();
bsreport[1]
bsreport[1][c(2,3),]
bsreport[1][,]
bsreport[[1]][3,]
class(bsreport[[1]][3,])
class(Parametert[1])
class(c("公司代號", "公司名稱", "現金及約當現金", "應收款項－淨額", "資產總額"))
class(Parametert[[1]])
Parametert[[1]]
c("公司代號", "公司名稱", "現金及約當現金", "應收款項－淨額", "資產總額")
Getbsreport <- function() {     Parameter<-list(c("公司代號","公司名稱","現金及約當現金","資產總額"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:3) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:1) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[[k]]])                 }                 Sys.sleep(sample(2:3, size = 1));             }         }     }     return(listall) }
bsreport <- Getbsreport();
Getbsreport <- function() {     Parameter<-list(c("公司代號","公司名稱","現金及約當現金","資產總額","date"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:3) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:1) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[[k]]])                 }                 Sys.sleep(sample(2:3, size = 1));             }         }     }     return(listall) }
Getbsreport <- function() {     Parameter<-list(c("公司代號","公司名稱","現金及約當現金","資產總額","date"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:1) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[[k]]])                 }                 Sys.sleep(sample(2:3, size = 1));             }         }     }     return(listall) }
bsreport <- Getbsreport();
Getbsreport <- function() {     Parameter<-list(c("公司代號","公司名稱","現金及約當現金","資產總額","date"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         s <- 4;         if (i == 5) s <- 2;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:1) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[[k]]])                 }                 Sys.sleep(sample(2:3, size = 1));             }         }     }     return(listall) }
Getbsreport <- function() {     Parameter<-list(c("公司代號","公司名稱","現金及約當現金","資產總額","date"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         s <- 4;         if (i == 5) s <- 2;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:1) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[[k]]])                 }                 Sys.sleep(sample(1:2, size = 1));             }         }     }     return(listall) }
bsreport <- Getbsreport();
All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;
bsURL <- "http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=106&season=01"
Source <- read_html(bsURL, encoding = "UTF-8");
All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;
Getbsreport <- function() {     Parameter<-list(c("公司代號","公司名稱","現金及約當現金","資產總額","date"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:4) {         #5         s <- 4;         if (i == 5) s <- 2;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:1) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[[k]]])                 }                 Sys.sleep(sample(1:2, size = 1));             }         }     }     return(listall) }
bsreport <- Getbsreport();
grep(pattern = "[0-9]{4}", All)
GetIndex(All)
bsURL <- "http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=106&season=02"
Source <- read_html(bsURL, encoding = "UTF-8");
All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;
length(All)
GetIndex(All)
Getbsreport <- function() {     Parameter<-list(c("公司代號","公司名稱","現金及約當現金","資產總額","date"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:1) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[[k]]])                 }                 Sys.sleep(sample(1:2, size = 1));             }         }     }     return(listall) }
bsreport <- Getbsreport();
rm(All, envir = as.environment(".GlobalEnv"))
Parametert <- list(     c("現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本", "每股參考淨值", "date"),     c("流動資產", "非流動資產", "資產合計", "負債合計", "股本", "每股參考淨值", "date"),     c("流動資產", "非流動資產", "資產總額", "負債總額", "股本", "每股參考淨值", "date"),     c("現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本", "每股參考淨值", "date"),     c("現金及約當現金", "應收款項", "資產總額", "負債總額", "每股參考淨值", "date"),     c("流動資產", "非流動資產", "資產總額", "負債總額", "股本", "每股參考淨值", "date"))
Parametert[[3]]
Parametert[[4]]
Getbsreport <- function() {     Parameter <- list(     c("現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本", "每股參考淨值", "date"),     c("流動資產", "非流動資產", "資產合計", "負債合計", "股本", "每股參考淨值", "date"),     c("流動資產", "非流動資產", "資產總額", "負債總額", "股本", "每股參考淨值", "date"),     c("現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本", "每股參考淨值", "date"),     c("現金及約當現金", "應收款項", "資產總額", "負債總額", "每股參考淨值", "date"),     c("流動資產", "非流動資產", "資產總額", "負債總額", "股本", "每股參考淨值", "date"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:length(listseason)) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[[k]]])                 }                 Sys.sleep(sample(1:2, size = 1));             }         }     }     return(listall) }
Getbsreport <- function() {     Parameter <- list(     c("現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本", "每股參考淨值", "date"),     c("流動資產", "非流動資產", "資產合計", "負債合計", "股本", "每股參考淨值", "date"),     c("流動資產", "非流動資產", "資產總額", "負債總額", "股本", "每股參考淨值", "date"),     c("現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本", "每股參考淨值", "date"),     c("現金及約當現金", "應收款項", "資產總額", "負債總額", "每股參考淨值", "date"),     c("流動資產", "非流動資產", "資產總額", "負債總額", "股本", "每股參考淨值", "date"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:1) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:length(listseason)) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[[k]]])                 }                 Sys.sleep(sample(1:2, size = 1));             }         }     }     return(listall) }
bsreport <- Getbsreport();
Getbsreport <- function() {     Parameter <- list(     c("現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本", "每股參考淨值", "date"),     c("流動資產", "非流動資產", "資產合計", "負債合計", "股本", "每股參考淨值", "date"),     c("流動資產", "非流動資產", "資產總額", "負債總額", "股本", "每股參考淨值", "date"),     c("現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本", "每股參考淨值", "date"),     c("現金及約當現金", "應收款項", "資產總額", "負債總額", "每股參考淨值", "date"),     c("流動資產", "非流動資產", "資產總額", "負債總額", "股本", "每股參考淨值", "date"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:length(listseason)) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[[k]]])                 }                 Sys.sleep(sample(1:2, size = 1));             }         }     }     return(listall) }
bsreport <- Getbsreport();
GetIndex <- function(All) {     Index <- grep(pattern = "[0-9]{4}", All)     Result <- data.frame(RowS = c(1:length(Index)), RowD = c(1:length(Index)), RowE = c(1:length(Index)), ColS = c(1:length(Index)), ColE = c(1:length(Index)));     Result$RowS <- Index;     for (i in 1:length(Index)) {         if (i == length(Index)) {             Result$RowD[i] = Result$RowD[i - 1];         } else {             Result$RowD[i] = Result$RowS[i + 1] - Result$RowS[i];         }     }     for (i in 1:length(Index)) {         if (i == length(Index) | i == 1) {             Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;             Result$ColS[i] = 0;             Result$ColE[i] = 0;         } else {             if (Result$RowD[i] == Result$RowD[i + 1] | Result$RowD[i] == Result$RowD[i - 1]) {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;                 Result$ColS[i] = 0;                 Result$ColE[i] = 0;             } else {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - Result$RowD[i + 1] - 1;                 Result$ColS[i] = Result$RowE[i] + 1;                 Result$ColE[i] = Result$RowS[i + 1] - 1;             }         }     }     return(Result) } GetisRaw <- function(IndexD, All) {     inde <- 1;     listresult <- list();     for (i in 1:nrow(IndexD)) {         if (i == 1) {             HED <- All[c(1:IndexD$RowD[i])];             listresult[[i]] <- data.frame(matrix(ncol = length(HED), nrow = 0));             colnames(listresult[[i]]) <- HED;             listresult[[i]] <- rbind(listresult[[i]][1,], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         } else {             if (IndexD$ColS[i] != 0) {                 inde <- inde + 1;                 listresult[[inde - 1]] <- rbind(listresult[[inde - 1]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);                 HED <- All[c(IndexD$ColS[i]:IndexD$ColE[i])];                 listresult[[inde]] <- data.frame(matrix(ncol = length(HED), nrow = 0));                 colnames(listresult[[inde]]) <- HED;                 listresult[[inde]] <- rbind(listresult[[inde]][1,], rep(NA, length(HED)));                 next;             }             listresult[[inde]] <- rbind(listresult[[inde]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         }     }     return(listresult) } ClearisRaw <- function(israw, date) {     for (i in 1:length(israw)) {         israw[[i]] <- israw[[i]][complete.cases(israw[[i]]),];         israw[[i]][, "date"] <- date;     }     return(israw) } Getisreport <- function() {     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:1) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetisRaw(All) %>% ClearisRaw(dateIndex);                 for (k in 1:length(listseason)) {                     listall[[k]] <- rbind(listall[[k]], listseason[[k]])                 }                 Sys.sleep(sample(2:5, size = 1));             }         }     }     return(listall) }
isreport <- Getisreport();
Getisreport <- function() {     Parameter <- list( c("公司代號", "利息淨收益", "營業費用", "繼續營業單位本期稅後淨利（淨損）", "本期綜合損益總額（稅後）", "基本每股盈餘（元）"), c("公司代號", "收益", "支出及費用", "本期綜合損益總額", "基本每股盈餘（元"), c("公司代號", "營業收入", "營業成本", "營業費用", "繼續營業單位本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）"), c("公司代號", "利息淨收益", "營業費用", "本期稅後淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）"), c("公司代號", "營業收入", "營業成本", "營業費用", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元)") , c("公司代號", "收入", "支出", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）")     )     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:1) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetisRaw(All) %>% ClearisRaw(dateIndex);                 for (k in 1:length(listseason)) {                     listall[[k]] <- rbind(listall[[k]], listseason[[k]])                 }                 Sys.sleep(sample(2:5, size = 1));             }         }     }     return(listall) }
Getisreport <- function() {     Parameter <- list( c("公司代號", "利息淨收益", "營業費用", "繼續營業單位本期稅後淨利（淨損）", "本期綜合損益總額（稅後）", "基本每股盈餘（元）"), c("公司代號", "收益", "支出及費用", "本期綜合損益總額", "基本每股盈餘（元"), c("公司代號", "營業收入", "營業成本", "營業費用", "繼續營業單位本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）"), c("公司代號", "利息淨收益", "營業費用", "本期稅後淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）"), c("公司代號", "營業收入", "營業成本", "營業費用", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元)") , c("公司代號", "收入", "支出", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）")     )     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetisRaw(All) %>% ClearisRaw(dateIndex);                 for (k in 1:length(listseason)) {                     listall[[k]] <- rbind(listall[[k]], listseason[[k]])                 }                 Sys.sleep(sample(2:5, size = 1));             }         }     }     return(listall) }
isreport <- Getisreport();
Getisreport <- function() {     Parameter <- list( c("公司代號", "利息淨收益", "營業費用", "繼續營業單位本期稅後淨利（淨損）", "本期綜合損益總額（稅後）", "基本每股盈餘（元）"), c("公司代號", "收益", "支出及費用", "本期綜合損益總額", "基本每股盈餘（元"), c("公司代號", "營業收入", "營業成本", "營業費用", "繼續營業單位本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）"), c("公司代號", "利息淨收益", "營業費用", "本期稅後淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）"), c("公司代號", "營業收入", "營業成本", "營業費用", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元)") , c("公司代號", "收入", "支出", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）")     )     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetisRaw(All) %>% ClearisRaw(dateIndex);                 for (k in 1:length(listseason)) {                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][, Parameter[[k]]])                 }                 Sys.sleep(sample(2:5, size = 1));             }         }     }     return(listall) }
isreport <- Getisreport();
Getisreport <- function() {     Parameter <- list( c("公司代號", "利息淨收益", "營業費用", "繼續營業單位本期稅後淨利（淨損）", "本期綜合損益總額（稅後）", "基本每股盈餘（元）", "date"), c("公司代號", "收益", "支出及費用", "本期綜合損益總額", "基本每股盈餘（元", "date"), c("公司代號", "營業收入", "營業成本", "營業費用", "繼續營業單位本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "利息淨收益", "營業費用", "本期稅後淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "營業收入", "營業成本", "營業費用", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "收入", "支出", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date")     )     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetisRaw(All) %>% ClearisRaw(dateIndex);                 for (k in 1:length(listseason)) {                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][, Parameter[[k]]])                 }                 Sys.sleep(sample(2:5, size = 1));             }         }     }     return(listall) }
isreport <- Getisreport();
Getisreport <- function() {     Parameter <- list( c("公司代號", "利息淨收益", "營業費用", "繼續營業單位本期稅後淨利（淨損）", "本期綜合損益總額（稅後）", "基本每股盈餘（元）", "date"), c("公司代號", "收益", "支出及費用", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "營業收入", "營業成本", "營業費用", "繼續營業單位本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "利息淨收益", "營業費用", "本期稅後淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "營業收入", "營業成本", "營業費用", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "收入", "支出", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date")     )     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetisRaw(All) %>% ClearisRaw(dateIndex);                 for (k in 1:length(listseason)) {                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][, Parameter[[k]]])                 }                 Sys.sleep(sample(2:5, size = 1));             }         }     }     return(listall) }
isreport <- Getisreport();
isreport[[1]]
isreport[[1]][,3]
isreport[[1]][,3]+1
isreport[[1]]$利息淨收益
as.numeric(sub(pattern = ",", replacement = "", isreport[[1]]$利息淨收益)) + 50
as.numeric(sub(pattern = ",", replacement = "", isreport[[1]][,3])) + 50
as.numeric(sub(pattern = ",", replacement = "", isreport[[1]][3,3])) + 50
as.numeric(sub(pattern = ",", replacement = "", isreport[[1]][,3]))
sub(pattern = ",", replacement = "", isreport[[1]][, 3])
as.numeric(gsub(pattern = ",", replacement = "", isreport[[1]][,3]))
length(isreport)
length(isreport[[1]])
length(isreport[[2]])
length(isreport[[3]])
GetNumericReport <- function(report) {     for (i in length(report)) {         for (j in length(report[[i]])) {             report[[i]][, j] <- as.numeric(gsub(pattern = ",", replacement = "", report[[i]][, j]))         }     }     return(report) }
report2<-GetNumericReport(isreport)
report2<-GetNumericReport(isreport)
report2[[2]][3,2]
report2[[2]][3,2]+1
GetNumericReport <- function(report) {     Report<-report     for (i in length(report)) {         for (j in length(report[[i]])) {             Report[[i]][, j] <- as.numeric(gsub(pattern = ",", replacement = "", Report[[i]][, j]))         }     }     return(Report) }
report2 <- GetNumericReport(isreport)
as.numeric(gsub(pattern = ",", replacement = "", isreport[[1]][,3]))
isreport[[1]][, 3] <- as.numeric(gsub(pattern = ",", replacement = "", isreport[[1]][, 3]))
isreport[[1]][, 3]
GetNumericReport <- function(report) {     Report <- report;     for (i in length(report)) {         for (j in length(report[[i]])) {             Report[[i]][, j] <- as.numeric(gsub(pattern = ",", replacement = "", Report[[i]][, j]))         }     }     return(Report) }
report2 <- GetNumericReport(isreport)
rm(report2, envir = as.environment(".GlobalEnv"))
report2 <- GetNumericReport(isreport)
length(isreport)
GetNumericReport <- function(report) {     Report <- report;     for (i in length(Report)) {         for (j in length(Report[[i]])) {             Report[[i]][, j] <- as.numeric(gsub(pattern = ",", replacement = "", Report[[i]][, j]))         }     }     return(Report) }
rm(report2, envir = as.environment(".GlobalEnv"))
report2 <- GetNumericReport(isreport)
GetNumericReport <- function(report) {     Report <- report;     for (i in length(Report)) {         for (j in length(Report[[i]])) {             Report[[i]][, j] <- as.numeric(gsub(pattern = ",", replacement = "", Report[[i]][, j]));         }     }     return(Report) }
report2 <- GetNumericReport(isreport)
GetNumericReport <- function(report) {     Report <- report;     for (i in 6) {         for (j in length(Report[[i]])) {             Report[[i]][, j] <- as.numeric(gsub(pattern = ",", replacement = "", Report[[i]][, j]));         }     }     return(Report) }
report2 <- GetNumericReport(isreport)
GetNumericReport <- function(Report) {     for (i in 1:length(Report)) {         for (j in 1:length(Report[[i]])) {             Report[[i]][, j] <- as.numeric(gsub(pattern = ",", replacement = "", Report[[i]][, j]))         }     }     return(Report) }
report2 <- GetNumericReport(isreport)
GetNumericReport <- function(Report) {     for (i in 1:length(Report)) {         for (j in 1:length(Report[[i]])) {             Report[[i]][, j] <- as.numeric(gsub(pattern = ",", replacement = "", Report[[i]][, j]))         }     }     return(Report) }
GetIndex <- function(All) {     Index <- grep(pattern = "[0-9]{4}", All)     Result <- data.frame(RowS = c(1:length(Index)), RowD = c(1:length(Index)), RowE = c(1:length(Index)), ColS = c(1:length(Index)), ColE = c(1:length(Index)));     Result$RowS <- Index;     for (i in 1:length(Index)) {         if (i == length(Index)) {             Result$RowD[i] = Result$RowD[i - 1];         } else {             Result$RowD[i] = Result$RowS[i + 1] - Result$RowS[i];         }     }     for (i in 1:length(Index)) {         if (i == length(Index) | i == 1) {             Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;             Result$ColS[i] = 0;             Result$ColE[i] = 0;         } else {             if (Result$RowD[i] == Result$RowD[i + 1] | Result$RowD[i] == Result$RowD[i - 1]) {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;                 Result$ColS[i] = 0;                 Result$ColE[i] = 0;             } else {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - Result$RowD[i + 1] - 1;                 Result$ColS[i] = Result$RowE[i] + 1;                 Result$ColE[i] = Result$RowS[i + 1] - 1;             }         }     }     return(Result) } GetbsRaw <- function(IndexD, All) {     inde <- 1;     listresult <- list();     for (i in 1:nrow(IndexD)) {         if (i == 1) {             HED <- All[c(1:IndexD$RowD[i])];             listresult[[i]] <- data.frame(matrix(ncol = length(HED), nrow = 0));             colnames(listresult[[i]]) <- HED;             listresult[[i]] <- rbind(listresult[[i]][1,], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         } else {             if (IndexD$ColS[i] != 0) {                 inde <- inde + 1;                 listresult[[inde - 1]] <- rbind(listresult[[inde - 1]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);                 HED <- All[c(IndexD$ColS[i]:IndexD$ColE[i])];                 listresult[[inde]] <- data.frame(matrix(ncol = length(HED), nrow = 0));                 colnames(listresult[[inde]]) <- HED;                 listresult[[inde]] <- rbind(listresult[[inde]][1,], rep(NA, length(HED)));                 next;             }             listresult[[inde]] <- rbind(listresult[[inde]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         }     }     return(listresult) } ClearbsRaw <- function(bsraw, date) {     for (i in 1:length(bsraw)) {         bsraw[[i]] <- bsraw[[i]][complete.cases(bsraw[[i]]),];         bsraw[[i]][, "date"] <- date;     }     return(bsraw) } Getbsreport <- function() {     Parameter <- list(     c("公司代號","現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本", "每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產合計", "負債合計", "股本", "每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產總額", "負債總額", "股本", "每股參考淨值", "date"),     c("公司代號","現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本", "每股參考淨值", "date"),     c("公司代號","現金及約當現金", "應收款項", "資產總額", "負債總額", "每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產總額", "負債總額", "股本", "每股參考淨值", "date"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:length(listseason)) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[[k]]])                 }                 Sys.sleep(sample(1:2, size = 1));             }         }     }     return(listall) }
bsreport <- Getbsreport()%>% GetNumericReport() ;
bsreport2 <- Getbsreport();
GetIndex <- function(All) {     Index <- grep(pattern = "[0-9]{4}", All)     Result <- data.frame(RowS = c(1:length(Index)), RowD = c(1:length(Index)), RowE = c(1:length(Index)), ColS = c(1:length(Index)), ColE = c(1:length(Index)));     Result$RowS <- Index;     for (i in 1:length(Index)) {         if (i == length(Index)) {             Result$RowD[i] = Result$RowD[i - 1];         } else {             Result$RowD[i] = Result$RowS[i + 1] - Result$RowS[i];         }     }     for (i in 1:length(Index)) {         if (i == length(Index) | i == 1) {             Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;             Result$ColS[i] = 0;             Result$ColE[i] = 0;         } else {             if (Result$RowD[i] == Result$RowD[i + 1] | Result$RowD[i] == Result$RowD[i - 1]) {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;                 Result$ColS[i] = 0;                 Result$ColE[i] = 0;             } else {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - Result$RowD[i + 1] - 1;                 Result$ColS[i] = Result$RowE[i] + 1;                 Result$ColE[i] = Result$RowS[i + 1] - 1;             }         }     }     return(Result) } GetisRaw <- function(IndexD, All) {     inde <- 1;     listresult <- list();     for (i in 1:nrow(IndexD)) {         if (i == 1) {             HED <- All[c(1:IndexD$RowD[i])];             listresult[[i]] <- data.frame(matrix(ncol = length(HED), nrow = 0));             colnames(listresult[[i]]) <- HED;             listresult[[i]] <- rbind(listresult[[i]][1,], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         } else {             if (IndexD$ColS[i] != 0) {                 inde <- inde + 1;                 listresult[[inde - 1]] <- rbind(listresult[[inde - 1]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);                 HED <- All[c(IndexD$ColS[i]:IndexD$ColE[i])];                 listresult[[inde]] <- data.frame(matrix(ncol = length(HED), nrow = 0));                 colnames(listresult[[inde]]) <- HED;                 listresult[[inde]] <- rbind(listresult[[inde]][1,], rep(NA, length(HED)));                 next;             }             listresult[[inde]] <- rbind(listresult[[inde]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         }     }     return(listresult) } ClearisRaw <- function(israw, date) {     for (i in 1:length(israw)) {         israw[[i]] <- israw[[i]][complete.cases(israw[[i]]),];         israw[[i]][, "date"] <- date;     }     return(israw) } Getisreport <- function() {     Parameter <- list( c("公司代號", "利息淨收益", "營業費用", "繼續營業單位本期稅後淨利（淨損）", "本期綜合損益總額（稅後）", "基本每股盈餘（元）", "date"), c("公司代號", "收益", "支出及費用", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "營業收入", "營業成本", "營業費用", "繼續營業單位本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "利息淨收益", "營業費用", "本期稅後淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "營業收入", "營業成本", "營業費用", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "收入", "支出", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date")     )     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetisRaw(All) %>% ClearisRaw(dateIndex);                 for (k in 1:length(listseason)) {                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][, Parameter[[k]]])                 }                 Sys.sleep(sample(2:5, size = 1));             }         }     }     return(listall) }
isreport <- Getisreport() %>% GetNumericReport(); isreport2 <- Getisreport()
cfURL <- "http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=3380&year=102&season=03"
Source <- read_html(cfURL, encoding = "UTF-8");
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
rowname
data.frame(matrix(ncol = length(rowname), nrow = 0));
test<-data.frame(matrix(ncol = length(rowname), nrow = 0));
colnames(test) <- rowname;
test
rbind(test,amount)
bsURL <- "http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=106&season=02"
Source <- read_html(bsURL, encoding = "UTF-8");
All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;
bsURL <- "http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=106&season=01"
Source <- read_html(bsURL, encoding = "UTF-8");
All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;
test
rbind(test, rep(NA, length(test)))
test<-data.frame(matrix(ncol = length(rowname), nrow = 1));
test
test<-data.frame(matrix(ncol = length(rowname), nrow = 0));
test
test<-data.frame(matrix(ncol = length(rowname), nrow = 0));
test
colnames(test) <- rowname;
test
as.data.frame(amount)
rbind(test, as.data.frame(amount))
test<-data.frame(matrix(ncol = length(rowname), nrow = 0));
colnames(test) <- rowname;
rbind(test, as.data.frame(amount))
d<-rbind(test, as.data.frame(amount))
d
amount 
as.data.frame(amount)
data.frame(matrix(rowname = amount, nrow = 1))
data.frame(matrix(rowname = amount, nrow = 0))
data.frame(matrix(ncol = rowname, nrow = 0))
test<-data.frame(matrix(ncol = length(rowname), nrow = 0));
data.frame(amount)
amount
class(amount)
d <- rbind(test, as.data.frame(t(amount)))
d
test<-data.frame(matrix(ncol = length(rowname), nrow = 0));
colnames(test) <- rowname;
d <- rbind(test, as.data.frame(t(amount)))
d
colnames(d) <- rowname;
cfURL <- "http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=3380&year=102&season=03"
Source <- read_html(cfURL, encoding = "UTF-8");
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
result<-data.frame()
result <- rbind(result, as.data.frame(t(amount)))
result
colnames(result) <- rowname;
result
Parameter<-c("營業活動之淨現金流入（流出）","投資活動之淨現金流入（流出）","籌資活動之淨現金流入（流出）")
result<-result[,Parameter]
result<-result[,Parameter]
Parameter<-c("營業活動之淨現金流入（流出）","　投資活動之淨現金流入（流出）","　籌資活動之淨現金流入（流出）")
result<-result[,Parameter]
result[,"date"]<-1
cfURL <- "http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=3380&year=102&season=03"
Source <- read_html(cfURL, encoding = "UTF-8");
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
Parameter<-c("營業活動之淨現金流入（流出）","　投資活動之淨現金流入（流出）","　籌資活動之淨現金流入（流出）")
result<-data.frame()
result <- rbind(result, as.data.frame(t(amount)))
colnames(result) <- rowname;
result <- result[, Parameter]
result[, "date"] <- 1
ccf<-c(2,3,23,44)
for (item in ccf) {     print(item) }
bsURL <- "http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=106&season=01"
Source <- read_html(bsURL, encoding = "UTF-8");
All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;
Index <- grep(pattern = "[0-9]{4}", All)
Index
All[Index]
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     result <- result[, Parameter];                     result[, "date"] <- dateIndex;                     listall <- rbind(listall, result);                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     result <- result[, Parameter];                     result[, "date"] <- dateIndex;                     listall <- rbind(listall, result);                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
               ?tryCatch
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     tryCatch( result <- result[, Parameter],finally = print(company))                     result[, "date"] <- dateIndex;                     listall <- rbind(listall, result);                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
cfURL <- "http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=2801&year=102&season=04"
Source <- read_html(cfURL, encoding = "UTF-8");
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
result<-data.frame()
result <- rbind(result, as.data.frame(t(amount)))
colnames(result) <- rowname;
result <- result[, Parameter]
result 
length(result)
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) next;                     tryCatch( result <- result[, Parameter],finally = print(company),f)                     result[, "date"] <- dateIndex;                     listall <- rbind(listall, result);                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
cfURL <- "http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=6005&year=102&season=04"
Source <- read_html(cfURL, encoding = "UTF-8");
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
Parameter<-c("營業活動之淨現金流入（流出）","　投資活動之淨現金流入（流出）","　籌資活動之淨現金流入（流出）")
result<-data.frame()
result <- rbind(result, as.data.frame(t(amount)))
colnames(result) <- rowname;
result <- result[, Parameter]
result[, "date"] <- 1
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) next;                     tryCatch( result <- result[, Parameter],finally = print(company))                     result[, "date"] <- dateIndex;                     listall <- rbind(listall, result);                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) next;                     tryCatch( result <- result[, Parameter],finally = print(company))                     result[, "date"] <- dateIndex;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:5, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
library(rvest)
library(httr)
library(magrittr)
library(sqldf)
library(ggplot2)
test<-Getcfreport();
test<-Getcfreport();
test<-Getcfreport();
cfURL <- "http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=1308&year=102&season=04"
cfURL <- "http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=1308&year=102&season=04"
Source <- read_html(cfURL, encoding = "UTF-8");
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
Parameter<-c("營業活動之淨現金流入（流出）","　投資活動之淨現金流入（流出）","　籌資活動之淨現金流入（流出）")
result<-data.frame()
result <- rbind(result, as.data.frame(t(amount)))
colnames(result) <- rowname;
result <- result[, Parameter]
result[, "date"] <- 1
bsURL <- "http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=102&season=04"
Source <- read_html(bsURL, encoding = "UTF-8");
All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;
Index <- grep(pattern = "[0-9]{4}", All)
All[Index]
cfURL <- "http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=1304&year=102&season=04"
Source <- read_html(cfURL, encoding = "UTF-8");
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
Parameter<-c("營業活動之淨現金流入（流出）","　投資活動之淨現金流入（流出）","　籌資活動之淨現金流入（流出）")
result<-data.frame()
result <- rbind(result, as.data.frame(t(amount)))
colnames(result) <- rowname;
result <- result[, Parameter]
result
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) next;                     tryCatch( result <- result[, Parameter],finally = print(company))                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:10, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (j in 1:10) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", Company[j], "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) next;                     tryCatch( result <- result[, Parameter],finally = print(company))                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:10, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
d<-All[Index]
d[1]
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (j in 1:10) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", Company[j], "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) next;                     tryCatch( result <- result[, Parameter],finally = print(company))                     result[, "date"] <- dateIndex;                     result[, "company"] <- Company[j];                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:10, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (j in 1:10) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", Company[j], "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) next;                     tryCatch(result <- result[, Parameter], finally = print(Company[j]))                     result[, "date"] <- dateIndex;                     result[, "company"] <- Company[j];                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:10, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
d
cfURL <- "http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=2801&year=102&season=04"
Source <- read_html(cfURL, encoding = "UTF-8");
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
Parameter<-c("營業活動之淨現金流入（流出）","　投資活動之淨現金流入（流出）","　籌資活動之淨現金流入（流出）")
result<-data.frame()
result <- rbind(result, as.data.frame(t(amount)))
colnames(result) <- rowname;
result <- result[, Parameter]
result
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (j in 1:20) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", Company[j], "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) next;                     tryCatch(result <- result[, Parameter], finally = print(Company[j]))                     result[, "date"] <- dateIndex;                     result[, "company"] <- Company[j];                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:10, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
d
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (j in 12:20) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", Company[j], "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) next;                     tryCatch(result <- result[, Parameter], finally = print(Company[j]))                     result[, "date"] <- dateIndex;                     result[, "company"] <- Company[j];                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:10, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (j in 1:20) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", Company[j], "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                    # if (length(result) <= 2) next;                     tryCatch(result <- result[, Parameter], error = print(Company[j]))                     result[, "date"] <- dateIndex;                     result[, "company"] <- Company[j];                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:10, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (j in 1:20) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", Company[j], "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                    # if (length(result) <= 2) next;                     tryCatch(result <- result[, Parameter], error =function(e) print(Company[j]))                     result[, "date"] <- dateIndex;                     result[, "company"] <- Company[j];                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:10, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                    # if (length(result) <= 2) next;                     tryCatch(result <- result[, Parameter], error = function(e) print(company))                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:10, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
d
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                    # if (length(result) <= 2) next;                     tryCatch(result <- result[, Parameter], error = function(e) print(company))                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:5, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
cfURL <- "http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=2809&year=102&season=04"
Source <- read_html(cfURL, encoding = "UTF-8");
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
#.hasBorder td
Parameter<-c("營業活動之淨現金流入（流出）","　投資活動之淨現金流入（流出）","　籌資活動之淨現金流入（流出）")
result<-data.frame()
result <- rbind(result, as.data.frame(t(amount)))
colnames(result) <- rowname;
result <- result[, Parameter]
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                    # if (length(result) <= 2) next;                     tryCatch(result <- result[, Parameter], error = function(e) { print(company);next; })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:5, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) next;                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:5, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(2:5, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:5, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
GetReviewReport <- function() {     Result <- data.frame(company = 0, companyN = 0, comment = 0, date = 0, type = 0);     Result <- Result[0,];     for (i in 1:5) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             if (TRUE) {                 reviewURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb14?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(reviewURL, encoding = "UTF-8");                 CompanyR <- Source %>% html_nodes(css = "td:nth-child(1)") %>% html_text;                 Length <- length(CompanyR);                 if (Length == 0) break;                 CompanyNR <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                 CommentR <- Source %>% html_nodes(css = "td:nth-child(7)") %>% html_text;                 result <- data.frame(company = c(1:Length), companyN = c(1:Length), comment = c(1:Length), date = c(1:Length), type = c(1:Length));                 result$company <- CompanyR;                 result$companyN <- CompanyNR;                 result$comment <- CommentR;                 result$date <- date;                 if (j == 4) { result$type <- 'Year'; } else { result$type <- 'Season'; }                 Result <- rbind(Result, result);                 Sys.sleep(sample(2:5, size = 1));             }         }     }     Result$comment <- trimws(Result$comment);     Result <- Result[Result$comment == '無保留意見',];     return(Result) }
ReviewReport<- GetReviewReport()
d
bsURL <- "http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=105&season=04"
Source <- read_html(bsURL, encoding = "UTF-8");
All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;
Index <- grep(pattern = "[0-9]{4}", All)
d<-All[Index]
d
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(2:5, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(2:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(2:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); }, finally = print(length(result)))                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(2:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
test<-Getcfreport();
library(rvest)
library(httr)
library(magrittr)
library(sqldf)
library(ggplot2)
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(2:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(2:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 Company <- Company[c(1:100)];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(2:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
?RETRY
d
RETRY("GET","http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=4737&year=102&season=04")
c<-RETRY("GET","http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=4737&year=102&season=04")
c
class(c)
bsURL <- "http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=105&season=04"
RETRY("GET",bsURL)
bsURL<-RETRY("GET",bsURL)
Source <- read_html(bsURL, encoding = "UTF-8");
All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;
Index <- grep(pattern = "[0-9]{4}", All)
d<-All[Index]
d
RETRY("GET","http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=2809&year=102&season=04")
cfURL <- RETRY("GET", "http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=2809&year=102&season=04")
Source <- read_html(cfURL, encoding = "UTF-8");
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
Parameter<-c("營業活動之淨現金流入（流出）","　投資活動之淨現金流入（流出）","　籌資活動之淨現金流入（流出）")
result<-data.frame()
result <- rbind(result, as.data.frame(t(amount)))
colnames(result) <- rowname;
result <- result[, Parameter]
cfURL <- RETRY("GET", "http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=1201&year=102&season=04")
Source <- read_html(cfURL, encoding = "UTF-8");
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
#.hasBorder td
Parameter<-c("營業活動之淨現金流入（流出）","　投資活動之淨現金流入（流出）","　籌資活動之淨現金流入（流出）")
result<-data.frame()
result <- rbind(result, as.data.frame(t(amount)))
colnames(result) <- rowname;
result <- result[, Parameter]
result[, "date"] <- 1
result
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 tryCatch(bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04"),                   error = function(e) { RETRY("GET", bsURL); }, finally = print("Discon"))                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     tryCatch(cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04"),                     error = function(e) { RETRY("GET", cfURL); },finally = print(company))                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(2:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 tryCatch(bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04"),                   error = function(e) { RETRY("GET", bsURL,times = 5); }))                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     tryCatch(cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04"),                     error = function(e) { RETRY("GET", cfURL,times = 5); },finally = print(company))                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(2:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 tryCatch(bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04"),                   error = function(e) { RETRY("GET", bsURL,times = 5); })                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     tryCatch(cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04"),                     error = function(e) { RETRY("GET", cfURL,times = 5); },finally = print(company))                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(2:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
library(rvest)
library(httr)
library(magrittr)
library(sqldf)
library(ggplot2)
GetReviewReport <- function() {     Result <- data.frame(company = 0, companyN = 0, comment = 0, date = 0, type = 0);     Result <- Result[0,];     for (i in 1:5) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             if (TRUE) {                 reviewURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb14?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(reviewURL, encoding = "UTF-8");                 CompanyR <- Source %>% html_nodes(css = "td:nth-child(1)") %>% html_text;                 Length <- length(CompanyR);                 if (Length == 0) break;                 CompanyNR <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                 CommentR <- Source %>% html_nodes(css = "td:nth-child(7)") %>% html_text;                 result <- data.frame(company = c(1:Length), companyN = c(1:Length), comment = c(1:Length), date = c(1:Length), type = c(1:Length));                 result$company <- CompanyR;                 result$companyN <- CompanyNR;                 result$comment <- CommentR;                 result$date <- date;                 if (j == 4) { result$type <- 'Year'; } else { result$type <- 'Season'; }                 Result <- rbind(Result, result);                 Sys.sleep(sample(2:5, size = 1));             }         }     }     Result$comment <- trimws(Result$comment);     Result <- Result[Result$comment == '無保留意見',];     return(Result) }
GetReviewReport <- function() {     Result <- data.frame(company = 0, companyN = 0, comment = 0, date = 0, type = 0);     Result <- Result[0,];     for (i in 1:5) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             if (TRUE) {                 reviewURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb14?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(reviewURL, encoding = "UTF-8");                 CompanyR <- Source %>% html_nodes(css = "td:nth-child(1)") %>% html_text;                 Length <- length(CompanyR);                 if (Length == 0) break;                 CompanyNR <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                 CommentR <- Source %>% html_nodes(css = "td:nth-child(7)") %>% html_text;                 result <- data.frame(company = c(1:Length), companyN = c(1:Length), comment = c(1:Length), date = c(1:Length), type = c(1:Length));                 result$company <- CompanyR;                 result$companyN <- CompanyNR;                 result$comment <- CommentR;                 result$date <- date;                 if (j == 4) { result$type <- 'Year'; } else { result$type <- 'Season'; }                 Result <- rbind(Result, result);                 Sys.sleep(sample(2:5, size = 1));             }         }     }     Result$comment <- trimws(Result$comment);     #Result <- Result[Result$comment == '無保留意見',];     return(Result) }
ReviewReport<- GetReviewReport()
Getbsreport <- function() {     Parameter <- list(     c("公司代號","現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本","權益總額", "每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產合計", "負債合計", "股本","權益合計" ,"每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","現金及約當現金", "應收款項", "資產總額", "負債總額","股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:1) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:length(listseason)) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[[k]]])                 }                 Sys.sleep(sample(1:2, size = 1));             }         }     }     return(listall) }
bsreport <- Getbsreport()%>% GetNumericReport() ;
GetIndex <- function(All) {     Index <- grep(pattern = "[0-9]{4}", All)     Result <- data.frame(RowS = c(1:length(Index)), RowD = c(1:length(Index)), RowE = c(1:length(Index)), ColS = c(1:length(Index)), ColE = c(1:length(Index)));     Result$RowS <- Index;     for (i in 1:length(Index)) {         if (i == length(Index)) {             Result$RowD[i] = Result$RowD[i - 1];         } else {             Result$RowD[i] = Result$RowS[i + 1] - Result$RowS[i];         }     }     for (i in 1:length(Index)) {         if (i == length(Index) | i == 1) {             Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;             Result$ColS[i] = 0;             Result$ColE[i] = 0;         } else {             if (Result$RowD[i] == Result$RowD[i + 1] | Result$RowD[i] == Result$RowD[i - 1]) {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;                 Result$ColS[i] = 0;                 Result$ColE[i] = 0;             } else {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - Result$RowD[i + 1] - 1;                 Result$ColS[i] = Result$RowE[i] + 1;                 Result$ColE[i] = Result$RowS[i + 1] - 1;             }         }     }     return(Result) } GetbsRaw <- function(IndexD, All) {     inde <- 1;     listresult <- list();     for (i in 1:nrow(IndexD)) {         if (i == 1) {             HED <- All[c(1:IndexD$RowD[i])];             listresult[[i]] <- data.frame(matrix(ncol = length(HED), nrow = 0));             colnames(listresult[[i]]) <- HED;             listresult[[i]] <- rbind(listresult[[i]][1,], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         } else {             if (IndexD$ColS[i] != 0) {                 inde <- inde + 1;                 listresult[[inde - 1]] <- rbind(listresult[[inde - 1]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);                 HED <- All[c(IndexD$ColS[i]:IndexD$ColE[i])];                 listresult[[inde]] <- data.frame(matrix(ncol = length(HED), nrow = 0));                 colnames(listresult[[inde]]) <- HED;                 listresult[[inde]] <- rbind(listresult[[inde]][1,], rep(NA, length(HED)));                 next;             }             listresult[[inde]] <- rbind(listresult[[inde]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         }     }     return(listresult) } ClearbsRaw <- function(bsraw, date) {     for (i in 1:length(bsraw)) {         bsraw[[i]] <- bsraw[[i]][complete.cases(bsraw[[i]]),];         bsraw[[i]][, "date"] <- date;     }     return(bsraw) }
Getbsreport <- function() {     Parameter <- list(     c("公司代號","現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本","權益總額", "每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產合計", "負債合計", "股本","權益合計" ,"每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","現金及約當現金", "應收款項", "資產總額", "負債總額","股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:1) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:length(listseason)) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[[k]]])                 }                 Sys.sleep(sample(1:2, size = 1));             }         }     }     return(listall) }
bsreport <- Getbsreport()%>% GetNumericReport() ;
bsreport2 <- Getbsreport();
library(rvest)
library(httr)
library(magrittr)
library(sqldf)
library(ggplot2)
GetIndex <- function(All) {     Index <- grep(pattern = "[0-9]{4}", All)     Result <- data.frame(RowS = c(1:length(Index)), RowD = c(1:length(Index)), RowE = c(1:length(Index)), ColS = c(1:length(Index)), ColE = c(1:length(Index)));     Result$RowS <- Index;     for (i in 1:length(Index)) {         if (i == length(Index)) {             Result$RowD[i] = Result$RowD[i - 1];         } else {             Result$RowD[i] = Result$RowS[i + 1] - Result$RowS[i];         }     }     for (i in 1:length(Index)) {         if (i == length(Index) | i == 1) {             Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;             Result$ColS[i] = 0;             Result$ColE[i] = 0;         } else {             if (Result$RowD[i] == Result$RowD[i + 1] | Result$RowD[i] == Result$RowD[i - 1]) {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;                 Result$ColS[i] = 0;                 Result$ColE[i] = 0;             } else {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - Result$RowD[i + 1] - 1;                 Result$ColS[i] = Result$RowE[i] + 1;                 Result$ColE[i] = Result$RowS[i + 1] - 1;             }         }     }     return(Result) } GetbsRaw <- function(IndexD, All) {     inde <- 1;     listresult <- list();     for (i in 1:nrow(IndexD)) {         if (i == 1) {             HED <- All[c(1:IndexD$RowD[i])];             listresult[[i]] <- data.frame(matrix(ncol = length(HED), nrow = 0));             colnames(listresult[[i]]) <- HED;             listresult[[i]] <- rbind(listresult[[i]][1,], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         } else {             if (IndexD$ColS[i] != 0) {                 inde <- inde + 1;                 listresult[[inde - 1]] <- rbind(listresult[[inde - 1]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);                 HED <- All[c(IndexD$ColS[i]:IndexD$ColE[i])];                 listresult[[inde]] <- data.frame(matrix(ncol = length(HED), nrow = 0));                 colnames(listresult[[inde]]) <- HED;                 listresult[[inde]] <- rbind(listresult[[inde]][1,], rep(NA, length(HED)));                 next;             }             listresult[[inde]] <- rbind(listresult[[inde]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         }     }     return(listresult) } ClearbsRaw <- function(bsraw, date) {     for (i in 1:length(bsraw)) {         bsraw[[i]] <- bsraw[[i]][complete.cases(bsraw[[i]]),];         bsraw[[i]][, "date"] <- date;     }     return(bsraw) } Getbsreport <- function() {     Parameter <- list(     c("公司代號","現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本","權益總額", "每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產合計", "負債合計", "股本","權益合計" ,"每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","現金及約當現金", "應收款項", "資產總額", "負債總額","股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:length(listseason)) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[[k]]])                 }                 Sys.sleep(sample(1:2, size = 1));             }         }     }     return(listall) }
GetNumericReport <- function(Report) {     for (i in 1:length(Report)) {         for (j in 1:length(Report[[i]])) {             Report[[i]][, j] <- as.numeric(gsub(pattern = ",", replacement = "", Report[[i]][, j]))         }     }     return(Report) }
bsreport <- Getbsreport()%>% GetNumericReport() ;
bsreport <- Getbsreport()%>% GetNumericReport() ;
bsreport[[1]]
library(ggplot2)
for (item in bsreport) {     return (item) }
for (item in bsreport) {     item }
for (item in bsreport) {     i<-i+1 }
i<-0
for (item in bsreport) {     i<-i+1 }
for (item in bsreport) {     i<-i+1 }
for (item in bsreport) {     i<-i+1 }
for (item in bsreport) {     i <- i + 1     print(i) }
for (item in bsreport[[1]]) {     i <- i + 1     print(i) }
bsreport[[1]]
for (item in bsreport[[1]]) {     i <- i + 1     print(i) }
bsreport[[2]]
bsreport[[1]][1,]
bsreport[[1]]
bsreport[[1]][bsreport[[1]]$公司代號==2801,]
qplot(date, 資產總額, data = bsreport[[1]][bsreport[[1]]$公司代號 == 2801,], geom = "point") + ggtitle("") + labs(x = "Date", y = "Asset")
qplot(date, 現金及約當現金, data = bsreport[[1]][bsreport[[1]]$公司代號 == 2801,], geom = "point") + ggtitle("") + labs(x = "Date", y = "Asset")
qplot(date, date, data = bsreport[[1]][bsreport[[1]]$公司代號 == 2801,], geom = "point") + ggtitle("") + labs(x = "Date", y = "Asset")
qplot(date, "應收款項－淨額", data = bsreport[[1]][bsreport[[1]]$公司代號 == 2801,], geom = "point") + ggtitle("") + labs(x = "Date", y = "Asset")
qplot(date, 3, data = bsreport[[1]][bsreport[[1]]$公司代號 == 2801,], geom = "point") + ggtitle("") + labs(x = "Date", y = "Asset")
qplot(date, c(3), data = bsreport[[1]][bsreport[[1]]$公司代號 == 2801,], geom = "point") + ggtitle("") + labs(x = "Date", y = "Asset")
qplot(date, c(1), data = bsreport[[1]][bsreport[[1]]$公司代號 == 2801,], geom = "point") + ggtitle("") + labs(x = "Date", y = "Asset")
qplot(date, 1, data = bsreport[[1]][bsreport[[1]]$公司代號 == 2801,], geom = "point") + ggtitle("") + labs(x = "Date", y = "Asset")
bsreport[[1]][bsreport[[1]]$公司代號 == 2801,]
bsreport[[1]][bsreport[[1]]$公司代號 == 2801,][,3]
qplot(date, 負債總額, data = bsreport[[1]][bsreport[[1]]$公司代號 == 2801,], geom = "point") + ggtitle("") + labs(x = "Date", y = "Asset")
qplot(date, y="應收款項－淨額", data = bsreport[[1]][bsreport[[1]]$公司代號 == 2801,], geom = "point") + ggtitle("") + labs(x = "Date", y = "Asset")
bsreport[[1]][1,1]
bsreport[[1]][0,1]
bsreport[[1]][0,2]
bsreport[[1]][1,2]
for (item in bsreport[[1]]) {     i <- i + 1     print(i) }
for (item in 1:nrow(bsreport[[1]])) {     i <- i + 1     print(i) }
length(bsreport)
norw(bsreport)
nrow(bsreport)
for (item in bsreport) {     i<-1+1 }
for (item in bsreport) {     i <- 1 + 1     print(i) }
unique(bsreport[[1]]$公司名稱)
bsreport[[1]]$公司名稱
unique(bsreport[[1]]$公司代號)
for (item in unique(bsreport[[1]]$公司代號)) {     print(item) }
for (Companytype in bsreport) {     for (Company in unique(Companytype$公司代號)) {         qplot(date,, data = Companytype[Companytype$公司代號 == Company,], geom = "point") + ggtitle("") + labs(x = "Date", y = "Asset")     } }
qplot(bsreport[[1]][bsreport[[1]]$公司代號 == Company,]$date, bsreport[[1]][bsreport[[1]]$公司代號 == Company,][, 2], geom = "point") + ggtitle("") + labs(x = "Date", y = "Asset")
qplot(bsreport[[1]][bsreport[[1]]$公司代號 == 2801,]$date, bsreport[[1]][bsreport[[1]]$公司代號 == Company,][, 2], geom = "point") + ggtitle("") + labs(x = "Date", y = "Asset")
qplot(bsreport[[1]][bsreport[[1]]$公司代號 == 2801,]$date, bsreport[[1]][bsreport[[1]]$公司代號 == 2801,][, 2], geom = "point") + ggtitle("") + labs(x = "Date", y = "Asset")
colnames(bsreport[[1]])
bsreport[1]
for (Companytype in bsreport[1]) {     for (Company in unique(Companytype$公司代號)) {         qplot(Companytype[Companytype$公司代號 == Company,]$date, bsreport[[1]][bsreport[[1]]$公司代號 == 2801,][, 2], geom = "point") + ggtitle("") + labs(x = "Date", y = "Asset")     } }
for (Companytype in bsreport[1]) {     for (Company in unique(Companytype$公司代號)) {         qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, 2], geom = "point") + ggtitle("") + labs(x = "Date", y = "Asset")     } }
for (Companytype in bsreport[1]) {     for (Company in unique(Companytype$公司代號)) {         qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, 2], geom = "point") + ggtitle("") + labs(x = "Date", y = "Asset")     } }
        qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, 2], geom = "point") + ggtitle("") + labs(x = "Date", y = "Asset")
colnames(bsreport[[1]])
"A"+"B"
paste("A","B")
for (Companytype in bsreport[1]) {     for (Company in unique(Companytype$公司代號)) {         for (Colname in colnames(Companytype)) {              qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,]$Colname, geom = "point") + ggtitle(paste(Company," ",Colname)) + labs(x = "Date", y = Colname)         }          } }
             qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,]$Colname, geom = "point") + ggtitle(paste(Company," ",Colname)) + labs(x = "Date", y = Colname)
             qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,]$date, geom = "point") + ggtitle(paste(Company," ",Colname)) + labs(x = "Date", y = Colname)
             qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,]$"date", geom = "point") + ggtitle(paste(Company," ",Colname)) + labs(x = "Date", y = Colname)
             qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,]$Colname, geom = "point") + ggtitle(paste(Company," ",Colname)) + labs(x = "Date", y = Colname)
             qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][,c(Colname)], geom = "point") + ggtitle(paste(Company," ",Colname)) + labs(x = "Date", y = Colname)
            qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)
for (Companytype in bsreport[1]) {     for (Company in unique(Companytype$公司代號)) {         for (Colname in colnames(Companytype)) {             qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company:",Company, "_","Index:" ,Colname, ".png"), path = "C:/Users/user/Documents/StockMarket/BalenceSheet")             unlink(paste0("Company:", Company, "_", "Index:", Colname, ".png")))         }          } }
for (Companytype in bsreport[1]) {     for (Company in unique(Companytype$公司代號)) {         for (Colname in colnames(Companytype)) {             qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company:",Company, "_","Index:" ,Colname, ".png"), path = "C:/Users/user/Documents/StockMarket/BalenceSheet")             unlink(paste0("Company:", Company, "_", "Index:", Colname, ".png"))         }          } }
for (Companytype in bsreport[1]) {     for (Company in unique(Companytype$公司代號)) {         for (Colname in colnames(Companytype)) {             qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company_",Company, "_","Index_" ,Colname, ".png"), path = "C:/Users/user/Documents/StockMarket/BalenceSheet")             unlink(paste0("Company_",Company, "_","Index_" ,Colname, ".png"))         }          } }
for (Companytype in bsreport[1]) {     for (Company in unique(Companytype$公司代號)) {         for (Colname in colnames(Companytype)) {             qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company_",Company, "_","Index_" ,Colname, ".png"), path = "C:/Users/user/Documents/StockMarket/BalenceSheet")             unlink(paste0("Company_",Company, "_","Index_" ,Colname, ".png"))         }          } }
for (Companytype in bsreport[1]) {     for (Company in unique(Companytype$公司代號)) {         for (Colname in colnames(Companytype)) {             if(Colname=="公司代號"||Colname=="date") next             qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company_",Company, "_","Index_" ,Colname, ".png"), path = "C:/Users/user/Documents/StockMarket/BalenceSheet")             unlink(paste0("Company_",Company, "_","Index_" ,Colname, ".png"))         }          } }
for (Companytype in bsreport[1]) {     for (Company in unique(Companytype$公司代號)) {         for (Colname in colnames(Companytype)) {             if(Colname=="公司代號"||Colname=="date") next             qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company_",Company, "_","Index_" ,Colname, ".png"), path = paste0("C:/Users/user/Documents/StockMarket/BalenceSheet/"),Company)             unlink(paste0("Company_",Company, "_","Index_" ,Colname, ".png"))         }          } }
for (Companytype in bsreport[1]) {     for (Company in unique(Companytype$公司代號)) {         for (Colname in colnames(Companytype)) {             if(Colname=="公司代號"||Colname=="date") next             qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company_",Company, "_","Index_" ,Colname, ".png"), path = paste0("C:/Users/user/Documents/StockMarket/BalenceSheet/",Company))             unlink(paste0("Company_",Company, "_","Index_" ,Colname, ".png"))         }          } }
for (Companytype in bsreport[1]) {     for (Company in unique(Companytype$公司代號)) {         for (Colname in colnames(Companytype)) {             if(Colname=="公司代號"||Colname=="date") next             qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company_",Company, "_","Index_" ,Colname, ".png"), path ="C:/Users/user/Documents/StockMarket/BalenceSheet/")             unlink(paste0("Company_",Company, "_","Index_" ,Colname, ".png"))         }          } }
for (Companytype in bsreport) {     for (Company in unique(Companytype$公司代號)) {         for (Colname in colnames(Companytype)) {             if(Colname=="公司代號"||Colname=="date") next             qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company_",Company, "_","Index_" ,Colname, ".png"), path  ="C:/Users/user/Documents/StockMarket/BalanceSheet/")             unlink(paste0("Company_",Company, "_","Index_" ,Colname, ".png"))         }          } }
for (Companytype in bsreport) {     for (Company in unique(Companytype$公司代號)) {         for (Colname in colnames(Companytype)) {             if(Colname=="公司代號"||Colname=="date") next             qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company_",Company, "_","Index_" ,Colname, ".png"), filepath  =("C:/Users/user/Documents/StockMarket/BalanceSheet/"))             unlink(paste0("Company_",Company, "_","Index_" ,Colname, ".png"))         }          } }
for (Companytype in bsreport) {     for (Company in unique(Companytype$公司代號)) {         for (Colname in colnames(Companytype)) {             if(Colname=="公司代號"||Colname=="date") next             qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company_",Company, "_","Index_" ,Colname, ".png"), file.path="C:/Users/user/Documents/StockMarket/BalanceSheet/")             unlink(paste0("Company_",Company, "_","Index_" ,Colname, ".png"))         }          } }
for (Companytype in bsreport) {     for (Company in unique(Companytype$公司代號)) {         for (Colname in colnames(Companytype)) {             if(Colname=="公司代號"||Colname=="date") next             qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company_",Company, "_","Index_" ,Colname, ".png"), path="C:/Users/user/Documents/StockMarket/BalanceSheet/")             unlink(paste0("Company_",Company, "_","Index_" ,Colname, ".png"))         }          } }
GrawResult <- function(Sheet,sheettype) {     for (Companytype in Sheet) {         for (Company in unique(Companytype$公司代號)) {             for (Colname in colnames(Companytype)) {                 if (Colname == "公司代號" || Colname == "date") next                 qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)                 ggsave(paste0("Company_", Company, "_", "Index_", Colname, ".png"), path = paste0("C:/Users/user/Documents/StockMarket/",sheettype))                 unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"))             }         }     } }
GrawResult <- function(Sheet,Sheettype) {     for (Companytype in Sheet) {         for (Company in unique(Companytype$公司代號)) {             for (Colname in colnames(Companytype)) {                 if (Colname == "公司代號" || Colname == "date") next                 qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)                 ggsave(paste0("Company_", Company, "_", "Index_", Colname, ".png"), path = paste0("C:/Users/user/Documents/StockMarket/",Sheettype))                 unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"))             }         }     } }
DrawResult <- function(Sheet,Sheettype) {     for (Companytype in Sheet) {         for (Company in unique(Companytype$公司代號)) {             for (Colname in colnames(Companytype)) {                 if (Colname == "公司代號" || Colname == "date") next                 qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)                 ggsave(paste0("Company_", Company, "_", "Index_", Colname, ".png"), path = paste0("C:/Users/user/Documents/StockMarket/",Sheettype))                 unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"))             }         }     } }
DrawResult(bsreport,"BalanceSheet")
GetIndex <- function(All) {     Index <- grep(pattern = "[0-9]{4}", All)     Result <- data.frame(RowS = c(1:length(Index)), RowD = c(1:length(Index)), RowE = c(1:length(Index)), ColS = c(1:length(Index)), ColE = c(1:length(Index)));     Result$RowS <- Index;     for (i in 1:length(Index)) {         if (i == length(Index)) {             Result$RowD[i] = Result$RowD[i - 1];         } else {             Result$RowD[i] = Result$RowS[i + 1] - Result$RowS[i];         }     }     for (i in 1:length(Index)) {         if (i == length(Index) | i == 1) {             Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;             Result$ColS[i] = 0;             Result$ColE[i] = 0;         } else {             if (Result$RowD[i] == Result$RowD[i + 1] | Result$RowD[i] == Result$RowD[i - 1]) {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;                 Result$ColS[i] = 0;                 Result$ColE[i] = 0;             } else {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - Result$RowD[i + 1] - 1;                 Result$ColS[i] = Result$RowE[i] + 1;                 Result$ColE[i] = Result$RowS[i + 1] - 1;             }         }     }     return(Result) } GetisRaw <- function(IndexD, All) {     inde <- 1;     listresult <- list();     for (i in 1:nrow(IndexD)) {         if (i == 1) {             HED <- All[c(1:IndexD$RowD[i])];             listresult[[i]] <- data.frame(matrix(ncol = length(HED), nrow = 0));             colnames(listresult[[i]]) <- HED;             listresult[[i]] <- rbind(listresult[[i]][1,], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         } else {             if (IndexD$ColS[i] != 0) {                 inde <- inde + 1;                 listresult[[inde - 1]] <- rbind(listresult[[inde - 1]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);                 HED <- All[c(IndexD$ColS[i]:IndexD$ColE[i])];                 listresult[[inde]] <- data.frame(matrix(ncol = length(HED), nrow = 0));                 colnames(listresult[[inde]]) <- HED;                 listresult[[inde]] <- rbind(listresult[[inde]][1,], rep(NA, length(HED)));                 next;             }             listresult[[inde]] <- rbind(listresult[[inde]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         }     }     return(listresult) } ClearisRaw <- function(israw, date) {     for (i in 1:length(israw)) {         israw[[i]] <- israw[[i]][complete.cases(israw[[i]]),];         israw[[i]][, "date"] <- date;     }     return(israw) } Getisreport <- function() {     Parameter <- list( c("公司代號", "利息淨收益", "營業費用", "繼續營業單位本期稅後淨利（淨損）", "本期綜合損益總額（稅後）", "基本每股盈餘（元）", "date"), c("公司代號", "收益", "支出及費用", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "營業收入", "營業成本", "營業費用", "繼續營業單位本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "利息淨收益", "營業費用", "本期稅後淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "營業收入", "營業成本", "營業費用", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "收入", "支出", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date")     )     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetisRaw(All) %>% ClearisRaw(dateIndex);                 for (k in 1:length(listseason)) {                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][, Parameter[[k]]])                 }                 Sys.sleep(sample(2:5, size = 1));             }         }     }     return(listall) }
isreport <- Getisreport() %>% GetNumericReport();
DrawResult(isreport,"IncomeStatement")
DrawResult(bsreport, "BalanceSheet")
GetIndex <- function(All) {     Index <- grep(pattern = "[0-9]{4}", All)     Result <- data.frame(RowS = c(1:length(Index)), RowD = c(1:length(Index)), RowE = c(1:length(Index)), ColS = c(1:length(Index)), ColE = c(1:length(Index)));     Result$RowS <- Index;     for (i in 1:length(Index)) {         if (i == length(Index)) {             Result$RowD[i] = Result$RowD[i - 1];         } else {             Result$RowD[i] = Result$RowS[i + 1] - Result$RowS[i];         }     }     for (i in 1:length(Index)) {         if (i == length(Index) | i == 1) {             Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;             Result$ColS[i] = 0;             Result$ColE[i] = 0;         } else {             if (Result$RowD[i] == Result$RowD[i + 1] | Result$RowD[i] == Result$RowD[i - 1]) {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;                 Result$ColS[i] = 0;                 Result$ColE[i] = 0;             } else {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - Result$RowD[i + 1] - 1;                 Result$ColS[i] = Result$RowE[i] + 1;                 Result$ColE[i] = Result$RowS[i + 1] - 1;             }         }     }     return(Result) } GetisRaw <- function(IndexD, All) {     inde <- 1;     listresult <- list();     for (i in 1:nrow(IndexD)) {         if (i == 1) {             HED <- All[c(1:IndexD$RowD[i])];             listresult[[i]] <- data.frame(matrix(ncol = length(HED), nrow = 0));             colnames(listresult[[i]]) <- HED;             listresult[[i]] <- rbind(listresult[[i]][1,], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         } else {             if (IndexD$ColS[i] != 0) {                 inde <- inde + 1;                 listresult[[inde - 1]] <- rbind(listresult[[inde - 1]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);                 HED <- All[c(IndexD$ColS[i]:IndexD$ColE[i])];                 listresult[[inde]] <- data.frame(matrix(ncol = length(HED), nrow = 0));                 colnames(listresult[[inde]]) <- HED;                 listresult[[inde]] <- rbind(listresult[[inde]][1,], rep(NA, length(HED)));                 next;             }             listresult[[inde]] <- rbind(listresult[[inde]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         }     }     return(listresult) } ClearisRaw <- function(israw, date) {     for (i in 1:length(israw)) {         israw[[i]] <- israw[[i]][complete.cases(israw[[i]]),];         israw[[i]][, "date"] <- date;     }     return(israw) } Getisreport <- function() {     Parameter <- list( c("公司代號", "利息淨收益", "營業費用", "繼續營業單位本期稅後淨利（淨損）", "本期綜合損益總額（稅後）", "基本每股盈餘（元）", "date"), c("公司代號", "收益", "支出及費用", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "營業收入", "營業成本", "營業費用", "繼續營業單位本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "利息淨收益", "營業費用", "本期稅後淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "營業收入", "營業成本", "營業費用", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "收入", "支出", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date")     )     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetisRaw(All) %>% ClearisRaw(dateIndex);                 for (k in 1:length(listseason)) {                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][, Parameter[[k]]])                 }                 Sys.sleep(sample(2:5, size = 1));             }         }     }     return(listall) }
library(rvest)
library(httr)
library(magrittr)
library(ggplot2)
bsreport <- Getbsreport()%>% GetNumericReport() ;
Getbsreport <- function() {     Parameter <- list(     c("公司代號","現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本","權益總額", "每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產合計", "負債合計", "股本","權益合計" ,"每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","現金及約當現金", "應收款項", "資產總額", "負債總額","股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:length(listseason)) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[[k]]])                 }                 Sys.sleep(sample(1:2, size = 1));             }         }     }     return(listall) }
bsreport <- Getbsreport()%>% GetNumericReport() ;
GetIndex <- function(All) {     Index <- grep(pattern = "[0-9]{4}", All)     Result <- data.frame(RowS = c(1:length(Index)), RowD = c(1:length(Index)), RowE = c(1:length(Index)), ColS = c(1:length(Index)), ColE = c(1:length(Index)));     Result$RowS <- Index;     for (i in 1:length(Index)) {         if (i == length(Index)) {             Result$RowD[i] = Result$RowD[i - 1];         } else {             Result$RowD[i] = Result$RowS[i + 1] - Result$RowS[i];         }     }     for (i in 1:length(Index)) {         if (i == length(Index) | i == 1) {             Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;             Result$ColS[i] = 0;             Result$ColE[i] = 0;         } else {             if (Result$RowD[i] == Result$RowD[i + 1] | Result$RowD[i] == Result$RowD[i - 1]) {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;                 Result$ColS[i] = 0;                 Result$ColE[i] = 0;             } else {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - Result$RowD[i + 1] - 1;                 Result$ColS[i] = Result$RowE[i] + 1;                 Result$ColE[i] = Result$RowS[i + 1] - 1;             }         }     }     return(Result) } GetbsRaw <- function(IndexD, All) {     inde <- 1;     listresult <- list();     for (i in 1:nrow(IndexD)) {         if (i == 1) {             HED <- All[c(1:IndexD$RowD[i])];             listresult[[i]] <- data.frame(matrix(ncol = length(HED), nrow = 0));             colnames(listresult[[i]]) <- HED;             listresult[[i]] <- rbind(listresult[[i]][1,], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         } else {             if (IndexD$ColS[i] != 0) {                 inde <- inde + 1;                 listresult[[inde - 1]] <- rbind(listresult[[inde - 1]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);                 HED <- All[c(IndexD$ColS[i]:IndexD$ColE[i])];                 listresult[[inde]] <- data.frame(matrix(ncol = length(HED), nrow = 0));                 colnames(listresult[[inde]]) <- HED;                 listresult[[inde]] <- rbind(listresult[[inde]][1,], rep(NA, length(HED)));                 next;             }             listresult[[inde]] <- rbind(listresult[[inde]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         }     }     return(listresult) } ClearbsRaw <- function(bsraw, date) {     for (i in 1:length(bsraw)) {         bsraw[[i]] <- bsraw[[i]][complete.cases(bsraw[[i]]),];         bsraw[[i]][, "date"] <- date;     }     return(bsraw) } Getbsreport <- function() {     Parameter <- list(     c("公司代號","現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本","權益總額", "每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產合計", "負債合計", "股本","權益合計" ,"每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","現金及約當現金", "應收款項", "資產總額", "負債總額","股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:length(listseason)) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[[k]]])                 }                 Sys.sleep(sample(1:2, size = 1));             }         }     }     return(listall) }
GetIndex <- function(All) {     Index <- grep(pattern = "[0-9]{4}", All)     Result <- data.frame(RowS = c(1:length(Index)), RowD = c(1:length(Index)), RowE = c(1:length(Index)), ColS = c(1:length(Index)), ColE = c(1:length(Index)));     Result$RowS <- Index;     for (i in 1:length(Index)) {         if (i == length(Index)) {             Result$RowD[i] = Result$RowD[i - 1];         } else {             Result$RowD[i] = Result$RowS[i + 1] - Result$RowS[i];         }     }     for (i in 1:length(Index)) {         if (i == length(Index) | i == 1) {             Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;             Result$ColS[i] = 0;             Result$ColE[i] = 0;         } else {             if (Result$RowD[i] == Result$RowD[i + 1] | Result$RowD[i] == Result$RowD[i - 1]) {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;                 Result$ColS[i] = 0;                 Result$ColE[i] = 0;             } else {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - Result$RowD[i + 1] - 1;                 Result$ColS[i] = Result$RowE[i] + 1;                 Result$ColE[i] = Result$RowS[i + 1] - 1;             }         }     }     return(Result) } GetisRaw <- function(IndexD, All) {     inde <- 1;     listresult <- list();     for (i in 1:nrow(IndexD)) {         if (i == 1) {             HED <- All[c(1:IndexD$RowD[i])];             listresult[[i]] <- data.frame(matrix(ncol = length(HED), nrow = 0));             colnames(listresult[[i]]) <- HED;             listresult[[i]] <- rbind(listresult[[i]][1,], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         } else {             if (IndexD$ColS[i] != 0) {                 inde <- inde + 1;                 listresult[[inde - 1]] <- rbind(listresult[[inde - 1]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);                 HED <- All[c(IndexD$ColS[i]:IndexD$ColE[i])];                 listresult[[inde]] <- data.frame(matrix(ncol = length(HED), nrow = 0));                 colnames(listresult[[inde]]) <- HED;                 listresult[[inde]] <- rbind(listresult[[inde]][1,], rep(NA, length(HED)));                 next;             }             listresult[[inde]] <- rbind(listresult[[inde]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         }     }     return(listresult) } ClearisRaw <- function(israw, date) {     for (i in 1:length(israw)) {         israw[[i]] <- israw[[i]][complete.cases(israw[[i]]),];         israw[[i]][, "date"] <- date;     }     return(israw) } Getisreport <- function() {     Parameter <- list( c("公司代號", "利息淨收益", "營業費用", "繼續營業單位本期稅後淨利（淨損）", "本期綜合損益總額（稅後）", "基本每股盈餘（元）", "date"), c("公司代號", "收益", "支出及費用", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "營業收入", "營業成本", "營業費用", "繼續營業單位本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "利息淨收益", "營業費用", "本期稅後淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "營業收入", "營業成本", "營業費用", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "收入", "支出", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date")     )     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetisRaw(All) %>% ClearisRaw(dateIndex);                 for (k in 1:length(listseason)) {                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][, Parameter[[k]]])                 }                 Sys.sleep(sample(2:5, size = 1));             }         }     }     return(listall) }
isreport <- Getisreport() %>% GetNumericReport();
GetNumericReport <- function(Report) {     for (i in 1:length(Report)) {         for (j in 1:length(Report[[i]])) {             Report[[i]][, j] <- as.numeric(gsub(pattern = ",", replacement = "", Report[[i]][, j]))         }     }     return(Report) }
isreport <- Getisreport() %>% GetNumericReport();
DrawResult(isreport,"IncomeStatement")
DrawResult <- function(Sheet,Sheettype) {     for (Companytype in Sheet) {         for (Company in unique(Companytype$公司代號)) {             for (Colname in colnames(Companytype)) {                 if (Colname == "公司代號" || Colname == "date") next                 qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)                 ggsave(paste0("Company_", Company, "_", "Index_", Colname, ".png"), path = paste0("C:/Users/user/Documents/StockMarket/",Sheettype))                 unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"))             }         }     } }
DrawResult(isreport,"IncomeStatement")
DrawResult(isreport,"IncomeStatement")
1%4
1%4
1%%4
isreport[[1]] <- isreport[[1]][isreport[[1]]$date%%4==0,]
isreport[[2]] <- isreport[[2]][isreport[[2]]$date%%4==0,]
isreport[[3]] <- isreport[[3]][isreport[[3]]$date%%4==0,]
isreport[[4]] <- isreport[[4]][isreport[[4]]$date%%4==0,]
isreport[[5]] <- isreport[[5]][isreport[[5]]$date%%4==0,]
isreport[[6]] <- isreport[[6]][isreport[[6]]$date%%4==0,]
DrawResult(isreport,"IncomeStatement")
library(rvest)
library(httr)
library(magrittr)
library(ggplot2)
GetIndex <- function(All) {     Index <- grep(pattern = "[0-9]{4}", All)     Result <- data.frame(RowS = c(1:length(Index)), RowD = c(1:length(Index)), RowE = c(1:length(Index)), ColS = c(1:length(Index)), ColE = c(1:length(Index)));     Result$RowS <- Index;     for (i in 1:length(Index)) {         if (i == length(Index)) {             Result$RowD[i] = Result$RowD[i - 1];         } else {             Result$RowD[i] = Result$RowS[i + 1] - Result$RowS[i];         }     }     for (i in 1:length(Index)) {         if (i == length(Index) | i == 1) {             Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;             Result$ColS[i] = 0;             Result$ColE[i] = 0;         } else {             if (Result$RowD[i] == Result$RowD[i + 1] | Result$RowD[i] == Result$RowD[i - 1]) {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;                 Result$ColS[i] = 0;                 Result$ColE[i] = 0;             } else {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - Result$RowD[i + 1] - 1;                 Result$ColS[i] = Result$RowE[i] + 1;                 Result$ColE[i] = Result$RowS[i + 1] - 1;             }         }     }     return(Result) } GetbsRaw <- function(IndexD, All) {     inde <- 1;     listresult <- list();     for (i in 1:nrow(IndexD)) {         if (i == 1) {             HED <- All[c(1:IndexD$RowD[i])];             listresult[[i]] <- data.frame(matrix(ncol = length(HED), nrow = 0));             colnames(listresult[[i]]) <- HED;             listresult[[i]] <- rbind(listresult[[i]][1,], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         } else {             if (IndexD$ColS[i] != 0) {                 inde <- inde + 1;                 listresult[[inde - 1]] <- rbind(listresult[[inde - 1]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);                 HED <- All[c(IndexD$ColS[i]:IndexD$ColE[i])];                 listresult[[inde]] <- data.frame(matrix(ncol = length(HED), nrow = 0));                 colnames(listresult[[inde]]) <- HED;                 listresult[[inde]] <- rbind(listresult[[inde]][1,], rep(NA, length(HED)));                 next;             }             listresult[[inde]] <- rbind(listresult[[inde]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         }     }     return(listresult) } ClearbsRaw <- function(bsraw, date) {     for (i in 1:length(bsraw)) {         bsraw[[i]] <- bsraw[[i]][complete.cases(bsraw[[i]]),];         bsraw[[i]][, "date"] <- date;     }     return(bsraw) } Getbsreport <- function() {     Parameter <- list(     c("公司代號","現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本","權益總額", "每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產合計", "負債合計", "股本","權益合計" ,"每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","現金及約當現金", "應收款項", "資產總額", "負債總額","股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:5) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:length(listseason)) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[[k]]])                 }                 Sys.sleep(sample(1:2, size = 1));             }         }     }     return(listall) }
Getbsreport <- function() {     Parameter <- list(     c("公司代號","現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本","權益總額", "每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產合計", "負債合計", "股本","權益合計" ,"每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","現金及約當現金", "應收款項－淨額", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","現金及約當現金", "應收款項", "資產總額", "負債總額","股本","權益總額" ,"每股參考淨值", "date"),     c("公司代號","流動資產", "非流動資產", "資產總額", "負債總額", "股本","權益總額" ,"每股參考淨值", "date"))     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:1) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:1) {             #s             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetbsRaw(All) %>% ClearbsRaw(dateIndex);                 for (k in 1:length(listseason)) { #length(listseason)                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][,Parameter[[k]]])                 }                 Sys.sleep(sample(1:2, size = 1));             }         }     }     return(listall) }
bsreport <- Getbsreport()%>% GetNumericReport() ;
bsreport <- Getbsreport()%>% GetNumericReport() ;
GetNumericReport <- function(Report) {     for (i in 1:length(Report)) {         for (j in 1:length(Report[[i]])) {             Report[[i]][, j] <- as.numeric(gsub(pattern = ",", replacement = "", Report[[i]][, j]))         }     }     return(Report) }
bsreport <- Getbsreport()%>% GetNumericReport() ;
showConnections(all = TRUE)
bsURL <- "http://mops.twse.com.tw/mops/web/ajax_t163sb05?1&step=1&firstin=1&off=1&TYPEK=sii&year=105&season=04"
Source <- read_html(bsURL, encoding = "UTF-8");
showConnections(all = TRUE)
closeAllConnections()
showConnections(all = TRUE)
library(rvest)
library(httr)
library(magrittr)
library(ggplot2)
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 tryCatch(bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04"),                   error = function(e) { RETRY("GET", bsURL,times = 5)})                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     tryCatch(cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04"),                     error = function(e) { RETRY("GET", cfURL,times = 5); },finally = print(company))                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(2:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 tryCatch(bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04"),                   error = function(e) { RETRY("GET", bsURL,times = 5)})                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     tryCatch(cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04"),                     error = function(e) { RETRY("GET", cfURL,times = 5); print("error")},finally = print(company))                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(2:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 tryCatch(bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04"),                   error = function(e) { RETRY("GET", bsURL,times = 5)})                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     tryCatch(cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04"),                     error = function(e) { RETRY("GET", cfURL,times = 5); print("error")},finally = print(company))                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(2:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 tryCatch(bsURL <- html_session(paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04")),                   error = function(e) { RETRY("GET", bsURL,times = 5)})                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     tryCatch(cfURL <- html_session(paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04")),                     error = function(e) { RETRY("GET", cfURL,times = 5); print("error")},finally = print(company))                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(2:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(2:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 tryCatch(bsURL <- html_session(paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04")),                   error = function(e) { RETRY("GET", bsURL,times = 5)})                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     tryCatch(cfURL <- html_session(paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04")),                     error = function(e) { RETRY("GET", cfURL,times = 5); print("error")},finally = print(company))                     Source <- read_html(cfURL, encoding = "UTF-8");                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(1:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(1:2, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
?RETRY
library(rvest)
library(httr)
library(magrittr)
#library(sqldf)
library(ggplot2)
RETRY("GET", cfURL, times = 5)
cfURL <- "http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=2809&year=102&season=04"
RETRY("GET", cfURL, times = 5)
RETRY("GET", html_session(cfURL), times = 5)
RETRY("GET", cfURL, times = 5)
library(rvest)
library(httr)
library(magrittr)
#library(sqldf)
library(ggplot2)
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(company))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); RETRY("GET", cfURL, times = 5); Source <- read_html(cfURL, encoding = "UTF-8"); print("error") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(1:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(1:2, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); RETRY("GET", cfURL, times = 5); Source <- read_html(cfURL, encoding = "UTF-8"); print("error") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(1:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(1:2, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); RETRY("GET", cfURL, times = 5); Source <- read_html(cfURL, encoding = "UTF-8"); print("error") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(1:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(company); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     listall <- rbind(listall, result);                     Sys.sleep(sample(1:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); RETRY("GET", cfURL, times = 5); Source <- read_html(cfURL, encoding = "UTF-8"); print("error") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(1:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company)); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(1:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); RETRY("GET", cfURL, times = 5); Source <- read_html(cfURL, encoding = "UTF-8"); print("error") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(1:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company)); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(3:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
?Retry
?RETRY
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); RETRY("GET", cfURL, times = 5,pause_base = 1,pause_cap = 60); Source <- read_html(cfURL, encoding = "UTF-8"); print("error") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(1:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company)); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(3:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); RETRY("GET", cfURL, times = 5,pause_base = 1,pause_cap = 60); Source <- read_html(cfURL, encoding = "UTF-8"); print("error") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(1:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company)); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(3:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); RETRY("GET", cfURL, times = 5,pause_base = 1,pause_cap = 60); Source <- read_html(cfURL, encoding = "UTF-8"); print("error") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(1:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company)); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(1:1, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); RETRY("GET", cfURL, times = 5,pause_base = 1,pause_cap = 60); Source <- read_html(cfURL, encoding = "UTF-8"); print("error") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(1:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company)); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(1:1, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
closeAllConnections();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); Sys.sleep(sample(1:3, size = 1)); Source <- read_html(cfURL, encoding = "UTF-8"); print("error") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(1:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company)); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(1:1, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); Sys.sleep(sample(1:3, size = 1)); Source <- read_html(cfURL, encoding = "UTF-8"); print("error") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(1:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company)); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(1:1, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); Sys.sleep(sample(10:10, size = 1)); Source <- read_html(cfURL, encoding = "UTF-8"); print("error") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(1:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company)); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(1:1, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
closeAllConnections()
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); Sys.sleep(sample(10:10, size = 1));  print("error"); Source <- read_html(cfURL, encoding = "UTF-8") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(1:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company)); }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(1:1, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
url <- "http://www.twse.com.tw/exchangeReport/FMNPTK?response=json&stockNo=1101&_"
test <- read_json(url)
library(rvest)
test <- read_json(url)
library(jsonlite)
test <- read_json(url)
test$data[[1]][[2]]
test$data[[1]][[1]]
test$data[[2]]
closeAllConnections()
test$fields
rbind(test$data[[1]], test$data[[2]])
data.frame(test$fields)
testd<-data.frame()
testd
names(testd) <- test$fields
names(testd) <- c(1,2,3)
rbind(test$data[[1]], test$data[[2]])
class(rbind(test$data[[1]], test$data[[2]]))
as.data.frame( rbind(test$data[[1]], test$data[[2]]))
testd<-as.data.frame( rbind(test$data[[1]], test$data[[2]]))
test$data[[2]]
test$fields
names(testd) <- test$fields
testd
test$fields
cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=9937&year=102&season=04");
tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); Sys.sleep(sample(10:10, size = 1)); print("error"); Source <- read_html(cfURL, encoding = "UTF-8") }, finally = print(company))
Source <- read_html(cfURL, encoding = "UTF-8")
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
library(httr)
cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=9937&year=102&season=04");
Source <- read_html(cfURL, encoding = "UTF-8")
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
result <- data.frame()
result <- rbind(result, as.data.frame(t(amount)))
colnames(result) <- rowname;
result
Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")
result <- result[, Parameter]
result
bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=102&season=04");
Source <- read_html(bsURL, encoding = "UTF-8")
All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;
Index <- grep(pattern = "[0-9]{4}", All);
Company <- All[Index];
Company
sort(Company)
library(rvest)
library(httr)
library(magrittr)
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); Sys.sleep(sample(10:10, size = 1));  print("error"); Source <- read_html(cfURL, encoding = "UTF-8") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) { Sys.sleep(sample(1:3, size = 1)); next; }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(1:1, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); Sys.sleep(sample(10:10, size = 1));  print("error"); Source <- read_html(cfURL, encoding = "UTF-8") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(1:3, size = 1));                         print("length");                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(1:1, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 2:2) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=", company, "&year=", year, "&season=04");                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); Sys.sleep(sample(10:10, size = 1));  print("error"); Source <- read_html(cfURL, encoding = "UTF-8") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(1:3, size = 1));                         print("length");                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(1:1, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test2<-Getcfreport();
Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")
cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=2867&year=103&season=04");
Source <- read_html(cfURL, encoding = "UTF-8")
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
result <- data.frame()
result
Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")
cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=103&season=4&co_id=2867&firstin=1");
Source <- read_html(cfURL, encoding = "UTF-8")
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
result <- data.frame()
result <- rbind(result, as.data.frame(t(amount)))
colnames(result) <- rowname;
result
result <- result[, Parameter]
result
cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=103&season=4&co_id=1101&firstin=1");
Source <- read_html(cfURL, encoding = "UTF-8")
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
result <- data.frame()
result <- rbind(result, as.data.frame(t(amount)))
colnames(result) <- rowname;
result <- result[, Parameter]
result
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); Sys.sleep(sample(10:10, size = 1));  print("error"); Source <- read_html(cfURL, encoding = "UTF-8") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(1:3, size = 1));                         print("length");                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(1:1, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test1<-Getcfreport();
cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=103&season=4&co_id=9937&firstin=1");
Source <- read_html(cfURL, encoding = "UTF-8")
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
result <- data.frame()
result <- rbind(result, as.data.frame(t(amount)))
colnames(result) <- rowname;
result <- result[, Parameter]
result
cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=102&season=4&co_id=9937&firstin=1");
Source <- read_html(cfURL, encoding = "UTF-8")
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
result <- data.frame()
result <- rbind(result, as.data.frame(t(amount)))
colnames(result) <- rowname;
result
result <- result[, Parameter]
result
library(rvest)
library(httr)
library(magrittr)
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); print("error"); Sys.sleep(sample(10:10, size = 1)); Source <- read_html(cfURL, encoding = "UTF-8") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(1:3, size = 1));                         print("length");                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(1:1, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test1<-Getcfreport();
test1<-Getcfreport();
cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=102&season=4&co_id=1225&firstin=1");
Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")
Source <- read_html(cfURL, encoding = "UTF-8")
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
result <- data.frame()
result <- rbind(result, as.data.frame(t(amount)))
colnames(result) <- rowname;
result <- result[, Parameter]
result
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); print("error"); Sys.sleep(sample(10:10, size = 1)); Source <- read_html(cfURL, encoding = "UTF-8") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print("length");                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(3:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test1<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); print("error"); Sys.sleep(sample(10:10, size = 1)); Source <- read_html(cfURL, encoding = "UTF-8") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(1:3, size = 1));                         print(paste("length",length(result)));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(1:3, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test1<-Getcfreport();
test1<-Getcfreport();
cfURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=102&season=4&co_id=1218&firstin=1");
Source <- read_html(cfURL, encoding = "UTF-8")
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
result <- data.frame()
result <- rbind(result, as.data.frame(t(amount)))
colnames(result) <- rowname;
result <- result[, Parameter]
result
Source
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); print("error"); Sys.sleep(sample(10:10, size = 1)); Source <- read_html(cfURL, encoding = "UTF-8") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(1:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(2:5, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test1<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); print("error"); Sys.sleep(sample(10:10, size = 1)); Source <- read_html(cfURL, encoding = "UTF-8") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(1:1, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(1:1, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test1<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); print("error"); Sys.sleep(sample(10:10, size = 1)); Source <- read_html(cfURL, encoding = "UTF-8") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(2:6, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test1<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 2:2) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); print("error"); Sys.sleep(sample(10:10, size = 1)); Source <- read_html(cfURL, encoding = "UTF-8") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(2:6, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
test2<-Getcfreport();
test2<-Getcfreport();
library(rvest)
library(jsonlite)
url <- "http://www.twse.com.tw/exchangeReport/FMNPTK?response=json&stockNo=1101&_"
test <- read_json(url)
test$data[[1]]
test
as.data.frame(test)
as.data.frame(test$data)
as.data.frame(test$fields=test$data)
as.data.frame(test$fields)
testd<-data.frame()
names(testd) <- test$fields
testd<-data.frame(c(1:9))
testd
testd<-data.frame()
?data.frame
 test$fields
testd <- data.frame(matrix(ncol = length(test$fields), nrow = 0))
testd
names(testd) <- test$fields
testd
testd <- rbind(testd, test$data)
test$data
testd<-as.data.frame(test$data)
testd
test
test$fields
test$fields[[1]]
test$data[[2]]
test
test$data[[]][[1]]
test$data[[]][1]
test$data[[,]][1]
test$data[1]
test$data[.][1]
test$data[]
test$data[][[1]]
test$data[1]
test$data[1][]
test$data[[1]][]
test$data[[]][[1]]
test$data[][[1]]
length(test$data)
test$data
testd<-as.data.frame(test$data[[]])
testd<-as.data.frame(test$data[])
testd
testd <- data.frame(matrix(ncol = length(test$fields), nrow = 0))
names(testd) <- test$fields
testd
test$data[[1]]
rbind(testd, test$data[[1]])
testd <- data.frame(matrix(ncol = length(test$fields), nrow = 1))
names(testd) <- test$fields
rbind(testd, test$data[[1]])
test22<-as.data.frame(test$data[[1]])
test22
rbind(testd, test22)
names(test2) <- test$fields
names(test22) <- test$fields
test22
length(test$data)
test
test$title
testd
url <- "http://www.twse.com.tw/exchangeReport/FMNPTK?response=json&stockNo=1101&_"
library(rvest)
library(jsonlite)
url <- "http://www.twse.com.tw/exchangeReport/FMNPTK?response=json&stockNo=1101&_"
company <- read_json(url)
company$data
price<-rbind(price, company$data)
price <- data.frame(matrix(ncol = length(company$fields), nrow = 1))
names(company) <- company$fields
price <- data.frame(matrix(ncol = length(company$fields), nrow = 1))
names(price) <- company$fields
price<-rbind(price, company$data)
price
price<-rbind(price, t(company$data))
url <- "http://www.twse.com.tw/exchangeReport/FMNPTK?response=json&stockNo=1101&_"
company <- read_json(url)
price <- data.frame(matrix(ncol = length(company$fields), nrow = 1))
names(price) <- company$fields
price<-rbind(price, t(company$data))
company$data
t(company$data)
t(company$data[])
t(company$data[[]])
company$data
company$data[[1]]
price <- rbind(price, company$data[[1]])
price
price[,"公司"]<-"1101"
price
for (r in company$data) {     price <- rbind(price, r) }
company$data
for (r in company$data) {     price <- rbind(price, r[]) }
for (r in company$data) {     price <- rbind(price, r[[]]) }
company
for (r in company$data) {     print("1")    # price <- rbind(price, r) }
for (r in company$data) {     print(r)    # price <- rbind(price, r) }
company$data[[1]]
url <- "http://www.twse.com.tw/exchangeReport/FMNPTK?response=json&stockNo=1101&_"
company <- read_json(url)
price <- data.frame(matrix(ncol = length(company$fields), nrow = 1))
names(price) <- company$fields
for (r in company$data) {    price <- rbind(price, r) }
PriceResult<-data.frame()
priceall <- list();
price[,"公司"]<-"1101"
priceall<-rbind(priceall,price)
bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=106&season=01");
tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))
All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;
library(httr)
tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))
Source <- read_html(bsURL, encoding = "UTF-8")
All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;
Index <- grep(pattern = "[0-9]{4}", All);
Company <- All[Index];
Company
for (company in Company) {     url <- paste0("http://www.twse.com.tw/exchangeReport/FMNPTK?response=json&stockNo=",company,"&_")     result <- read_json(url)     price <- data.frame(matrix(ncol = length(result$fields), nrow = 1))     names(price) <- result$fields     for (r in result$data) {         price <- rbind(price, r)     }     price[, "公司"] <- company     priceall <- rbind(priceall, price)     Sys.sleep(sample(2:6, size = 0.5)); }
for (company in Company) {     url <- paste0("http://www.twse.com.tw/exchangeReport/FMNPTK?response=json&stockNo=",company,"&_")     result <- read_json(url)     price <- data.frame(matrix(ncol = length(result$fields), nrow = 1))     names(price) <- result$fields     for (r in result$data) {         price <- rbind(price, r)     }     price[, "公司"] <- company     priceall <- rbind(priceall, price)     Sys.sleep(sample(2:6, size = 1)); }
for (company in Company) {     url <- paste0("http://www.twse.com.tw/exchangeReport/FMNPTK?response=json&stockNo=", company, "&_")     tryCatch(result <- read_json(url) ,error = function(e) {print("error") },finally = print(company))     price <- data.frame(matrix(ncol = length(result$fields), nrow = 1))     names(price) <- result$fields     for (r in result$data) {         price <- rbind(price, r)     }     price[, "公司"] <- company     priceall <- rbind(priceall, price)     Sys.sleep(sample(2:6, size = 1)); }
for (company in Company) {     url <- paste0("http://www.twse.com.tw/exchangeReport/FMNPTK?response=json&stockNo=", company, "&_")     tryCatch(result <- read_json(url) ,error = function(e) {print("error") },finally = print(company))     price <- data.frame(matrix(ncol = length(result$fields), nrow = 1))     if (length(price)<1) print(result);next;     names(price) <- result$fields     for (r in result$data) {         price <- rbind(price, r)     }     price[, "公司"] <- company     priceall <- rbind(priceall, price)     Sys.sleep(sample(2:6, size = 1)); }
for (company in Company) {     url <- paste0("http://www.twse.com.tw/exchangeReport/FMNPTK?response=json&stockNo=", company, "&_")     tryCatch(result <- read_json(url) ,error = function(e) {print("error") },finally = print(company))     price <- data.frame(matrix(ncol = length(result$fields), nrow = 1))     if (length(result$fields) < 1) print(result);
    next;     names(price) <- result$fields     for (r in result$data) {         price <- rbind(price, r)     }     price[, "公司"] <- company     priceall <- rbind(priceall, price)     Sys.sleep(sample(2:6, size = 1)); }
for (company in Company) {     url <- paste0("http://www.twse.com.tw/exchangeReport/FMNPTK?response=json&stockNo=", company, "&_")     tryCatch(result <- read_json(url) ,error = function(e) {print("error") },finally = print(company))     price <- data.frame(matrix(ncol = length(result$fields), nrow = 1))   #  if (length(result$fields) < 1) { print(result); next; }     names(price) <- result$fields     for (r in result$data) {         price <- rbind(price, r)     }     price[, "公司"] <- company     priceall <- rbind(priceall, price)     Sys.sleep(sample(2:6, size = 1)); }
for (company in Company) {     url <- paste0("http://www.twse.com.tw/exchangeReport/FMNPTK?response=json&stockNo=", company, "&_")     tryCatch(result <- read_json(url) ,error = function(e) {print("error") },finally = print(company))     price <- data.frame(matrix(ncol = length(result$fields), nrow = 1))     if (length(result$fields) < 1) { print(result); next; }     names(price) <- result$fields     for (r in result$data) {         price <- rbind(price, r)     }     price[, "公司"] <- company     priceall <- rbind(priceall, price)     Sys.sleep(sample(2:6, size = 1)); }
StockPrice<-PriceResult[complete.cases(PriceResult),]
StockPrice<-PriceResult[complete.cases(priceall),]
StockPrice<-priceall[complete.cases(priceall),]
library(rvest)
library(httr)
library(magrittr)
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 2:2) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); print("error"); Sys.sleep(sample(10:10, size = 1)); Source <- read_html(cfURL, encoding = "UTF-8") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(2:6, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
CashFlow103<-Getcfreport();
CashFlow103<-Getcfreport();
library(rvest)
library(jsonlite)
library(magrittr)
library(httr)
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { Sys.sleep(sample(3:3, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8"); print("error") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); print("error"); Sys.sleep(sample(10:10, size = 1)); Source <- read_html(cfURL, encoding = "UTF-8") }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(4:6, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
CashFlow<-Getcfreport();
CashFlow<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { print("Allerror"); Sys.sleep(sample(10:10, size = 1)); closeAllConnections(); RETRY("GET", bsURL, times = 5); Source <- read_html(bsURL, encoding = "UTF-8") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"), error = function(e) { closeAllConnections(); print(paste(company,"Companyerror")); Sys.sleep(sample(10:10, size = 1)); }, finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(4:6, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
            ?RETRY
library(rvest)
library(httr)
library(magrittr)
cfURLs <- RETRY("GET", cfURL,pause_base = 1,pause_cap = 60)
cfURL <- "http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=2809&year=102&season=04"
cfURLs <- RETRY("GET", cfURL,pause_base = 1,pause_cap = 60)
cfURLs
Source <- read_html(cfURL, encoding = "UTF-8");
Source
cfURLs <- RETRY("GET", cfURL,pause_base = 1,encode = raw,pause_cap = 60)
cfURLs
cfURLs <- RETRY("GET", cfURL,pause_base = 1,pause_cap = 60)
cfURLs
Source
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
rowname 
amount 
rowname2 <- cfURLs %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
Source2 <- read_html(cfURLs, encoding = "UTF-8")
rowname2 <- Source2 %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount2 <- Source2 %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
rowname2
amount2
?Retry
?RETRY
cfURL <- "http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=2809&year=102&season=04"
cfURL
cfURL <- RETRY("GET", cfURL,pause_base = 1,pause_cap = 60,quiet = FALSE)
cfURL
Source <- read_html(cfURL, encoding = "UTF-8");
rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;
amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
rowname
amount
cfURL <- "http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&step=1&firstin=1&off=1&keyword4=&code1=&TYPEK2=&checkbtn=&queryName=co_id&inpuType=co_id&TYPEK=all&isnew=false&co_id=2809&year=102&season=04"
cfURL <- RETRY("GET", cfURL,pause_base = 1,pause_cap = 60,quiet = FALSE)
Source <- read_html(cfURL, encoding = "UTF-8"); rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text; amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
Source <- read_html(cfURL, encoding = "UTF-8"); rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text; amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"), error = function(e) { print("Allerror"); Sys.sleep(sample(10:10, size = 1)); closeAllConnections(); bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE); Source <- read_html(bsURL, encoding = "UTF-8") }, finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE)                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(4:6, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
CashFlow<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")
                    },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(4:6, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
CashFlow<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:2) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")
                    },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(4:6, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
CashFlow0203<-Getcfreport();
library(rvest)
library(httr)
library(magrittr)
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 1:2) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")                     },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(4:6, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
CashFlow0203<-Getcfreport();
CashFlow0203<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 3:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")                     },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(4:6, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
CashFlow0405<-Getcfreport();
closeAllConnections()
CashFlow0405<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 3:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")                     },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(4:5, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
CashFlow0405<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 3:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")                     },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             print(Source)                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(1:5, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
CashFlow0405<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 3:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")                     },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             print(Source)                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(4:6, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 3:3) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")                     },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             print(Source)                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(3:6, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
CashFlow0405<-Getcfreport();
CashFlow04<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 4:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")                     },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             print(Source)                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(3:6, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 4:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")                     },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             print(Source)                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(3:4, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
CashFlow05<-Getcfreport();
library(rvest)
library(httr)
library(magrittr)
}
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）")     dateIndex <- 0;     listall <- list();     for (i in 4:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")                     },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             print(Source)                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(3:4, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
CashFlow05<-Getcfreport();
CashFlow05<-Getcfreport();
`StockMarket_script_CashFlow0203` <- read.csv(file="C:/Users/user/AppData/Local/Temp/StockMarket_script_CashFlow0203.csv.utf8", header=TRUE, row.names=NULL, encoding="UTF-8", sep=",", dec=".", quote="\"", comment.char="")
`StockMarket_script_CashFlow04` <- read.csv(file="C:/Users/user/AppData/Local/Temp/StockMarket_script_CashFlow04.csv.utf8", header=TRUE, row.names=NULL, encoding="UTF-8", sep=",", dec=".", quote="\"", comment.char="")
dim(CashFlow05)
head(CashFlow05)
CashFlow0203<-StockMarket_script_CashFlow0203[,c(2,3,4,5,6)]
head(CashFlow0203)
CashFlow04 <- StockMarket_script_CashFlow04[, c(2, 3, 4, 5, 6)]
head(CashFlow04)
CashFlow0203 <- StockMarket_script_CashFlow0203[, c(2, 3, 4, 5, 6)]
head(CashFlow0203)
names(CashFlow04)<-c("營業活動之淨現金流","投資活動之淨現金流","籌資活動之淨現金流","Date","Company")
head(CashFlow04)
names(CashFlow0203) <- c("營業活動之淨現金流", "投資活動之淨現金流", "籌資活動之淨現金流", "Date", "Company")
head(CashFlow05)
head(CashFlow0203)
names(CashFlow05) <- c("營業活動之淨現金流", "投資活動之淨現金流", "籌資活動之淨現金流", "Date", "Company")
head(CashFlow05)
head(CashFlow04)
CashFlow04$Date<-3
CashFlow05$Date<-4
CashFlowAll<-rbind(CashFlow0203,CashFlow04,CashFlow05)
`StockMarket_test_CashFlowGoodCompany` <- read.csv(file="C:/Users/user/AppData/Local/Temp/StockMarket_test_CashFlowGoodCompany.csv.utf8", header=TRUE, row.names=NULL, encoding="UTF-8", sep=",", dec=".", quote="\"", comment.char="")
`StockMarket_script_CashFlowAll` <- read.csv(file="C:/Users/user/AppData/Local/Temp/StockMarket_script_CashFlowAll.csv.utf8", header=TRUE, row.names=NULL, encoding="UTF-8", sep=",", dec=".", quote="\"", comment.char="")
?merge
merge(StockMarket_test_CashFlowGoodCompany, StockMarket_script_CashFlowAll,by.x="Company",by.y="company")
Goood<-merge(StockMarket_test_CashFlowGoodCompany, StockMarket_script_CashFlowAll,by.x="Company",by.y="company")
rm(Goood, envir = as.environment(".GlobalEnv"))
GoodCompany <- merge(StockMarket_test_CashFlowGoodCompany, StockMarket_script_CashFlowAll, by.x = "Company", by.y = "company")
names(GoodCompany)<-c("Company","count","row","營業活動之淨現金流","投資活動之淨現金流","籌資活動之淨現金流","date","自由現金流")
GoodCompany<-GoodCompany[,c("Company","營業活動之淨現金流","投資活動之淨現金流","籌資活動之淨現金流","date","自由現金流")]
names(GoodCompany) <- c("公司代號", "營業活動之淨現金流", "投資活動之淨現金流", "籌資活動之淨現金流", "date", "自由現金流")
DrawResult <- function(Sheet,Sheettype) {     for (Companytype in Sheet) {         for (Company in unique(Companytype$公司代號)) {             for (Colname in colnames(Companytype)) {                 if (Colname == "公司代號" || Colname == "date") next                 qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)                 ggsave(paste0("Company_", Company, "_", "Index_", Colname, ".png"), path = paste0("C:/Users/user/Documents/StockMarket/",Sheettype))                 unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"))             }         }     } }
cashflow<-GoodCompany
DrawResult(cashflow,"CashFlow")
DrawResultCF <- function(Sheet, Sheettype) {         for (Company in unique(Sheet$公司代號)) {             for (Colname in colnames(Companytype)) {                 if (Colname == "公司代號" || Colname == "date") next                 qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)                 ggsave(paste0("Company_", Company, "_", "Index_", Colname, ".png"), path = paste0("C:/Users/user/Documents/StockMarket/", Sheettype))                 unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"))             }         } }
DrawResultCF(cashflow,"CashFlow")
DrawResultCF <- function(Sheet, Sheettype) {         for (Company in unique(Sheet$公司代號)) {             for (Colname in colnames(Sheet)) {                 if (Colname == "公司代號" || Colname == "date") next                 qplot(Sheet[Sheet$公司代號 == Company,]$date, Sheet[Sheet$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)                 ggsave(paste0("Company_", Company, "_", "Index_", Colname, ".png"), path = paste0("C:/Users/user/Documents/StockMarket/", Sheettype))                 unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"))             }         } }
DrawResultCF(cashflow,"CashFlow")
library(ggplot2)
DrawResultCF <- function(Sheet, Sheettype) {         for (Company in unique(Sheet$公司代號)) {             for (Colname in colnames(Sheet)) {                 if (Colname == "公司代號" || Colname == "date") next                 qplot(Sheet[Sheet$公司代號 == Company,]$date, Sheet[Sheet$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)                 ggsave(paste0("Company_", Company, "_", "Index_", Colname, ".png"), path = paste0("C:/Users/user/Documents/StockMarket/", Sheettype))                 unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"))             }         } }
DrawResultCF(cashflow,"CashFlow")
`Industry` <- read.csv(file="C:/Users/user/AppData/Local/Temp/Industry.csv.utf8", header=TRUE, row.names=NULL, encoding="UTF-8", sep=",", dec=".", quote="\"", comment.char="")
Industry$`X.公司代號.`[1]
gsub("'","", Industry$`X.公司代號.`[1])
GetIndex <- function(All) {     Index <- grep(pattern = "[0-9]{4}", All)     Result <- data.frame(RowS = c(1:length(Index)), RowD = c(1:length(Index)), RowE = c(1:length(Index)), ColS = c(1:length(Index)), ColE = c(1:length(Index)));     Result$RowS <- Index;     for (i in 1:length(Index)) {         if (i == length(Index)) {             Result$RowD[i] = Result$RowD[i - 1];         } else {             Result$RowD[i] = Result$RowS[i + 1] - Result$RowS[i];         }     }     for (i in 1:length(Index)) {         if (i == length(Index) | i == 1) {             Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;             Result$ColS[i] = 0;             Result$ColE[i] = 0;         } else {             if (Result$RowD[i] == Result$RowD[i + 1] | Result$RowD[i] == Result$RowD[i - 1]) {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - 1;                 Result$ColS[i] = 0;                 Result$ColE[i] = 0;             } else {                 Result$RowE[i] = Result$RowS[i] + Result$RowD[i] - Result$RowD[i + 1] - 1;                 Result$ColS[i] = Result$RowE[i] + 1;                 Result$ColE[i] = Result$RowS[i + 1] - 1;             }         }     }     return(Result) } GetisRaw <- function(IndexD, All) {     inde <- 1;     listresult <- list();     for (i in 1:nrow(IndexD)) {         if (i == 1) {             HED <- All[c(1:IndexD$RowD[i])];             listresult[[i]] <- data.frame(matrix(ncol = length(HED), nrow = 0));             colnames(listresult[[i]]) <- HED;             listresult[[i]] <- rbind(listresult[[i]][1,], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         } else {             if (IndexD$ColS[i] != 0) {                 inde <- inde + 1;                 listresult[[inde - 1]] <- rbind(listresult[[inde - 1]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);                 HED <- All[c(IndexD$ColS[i]:IndexD$ColE[i])];                 listresult[[inde]] <- data.frame(matrix(ncol = length(HED), nrow = 0));                 colnames(listresult[[inde]]) <- HED;                 listresult[[inde]] <- rbind(listresult[[inde]][1,], rep(NA, length(HED)));                 next;             }             listresult[[inde]] <- rbind(listresult[[inde]], All[c(IndexD$RowS[i]:IndexD$RowE[i])]);         }     }     return(listresult) } ClearisRaw <- function(israw, date) {     for (i in 1:length(israw)) {         israw[[i]] <- israw[[i]][complete.cases(israw[[i]]),];         israw[[i]][, "date"] <- date;     }     return(israw) } Getisreport <- function() {     Parameter <- list( c("公司代號", "利息淨收益", "營業費用", "繼續營業單位本期稅後淨利（淨損）", "本期綜合損益總額（稅後）", "基本每股盈餘（元）", "date"), c("公司代號", "收益", "支出及費用", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "營業收入", "營業成本", "營業費用", "繼續營業單位本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "利息淨收益", "營業費用", "本期稅後淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "營業收入", "營業成本", "營業費用", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "收入", "支出", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date")     )     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:1) {         #5         s <- 4;         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetisRaw(All) %>% ClearisRaw(dateIndex);                 for (k in 1:length(listseason)) {                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][, Parameter[[k]]])                 }                 Sys.sleep(sample(2:5, size = 1));             }         }     }     return(listall) }
library(rvest)
library(httr)
library(magrittr)
library(ggplot2)
library(jsonlite)
isreport <- Getisreport() %>% GetNumericReport();
isreport <- Getisreport() %>% GetNumericReport();
#-----Common Function-----# GetNumericReport <- function(Report) {     for (i in 1:length(Report)) {         for (j in 1:length(Report[[i]])) {             Report[[i]][, j] <- as.numeric(gsub(pattern = ",", replacement = "", Report[[i]][, j]))         }     }     return(Report) }
bsreport <- Getbsreport()%>% GetNumericReport() ;
isreport <- Getisreport() %>% GetNumericReport();
 Getisreport <- function() {     Parameter <- list( c("公司代號", "利息淨收益", "營業費用", "繼續營業單位本期稅後淨利（淨損）", "本期綜合損益總額（稅後）", "基本每股盈餘（元）", "date"), c("公司代號", "收益", "支出及費用", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "營業收入", "營業成本", "營業費用", "繼續營業單位本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "利息淨收益", "營業費用", "本期稅後淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "營業收入", "營業成本", "營業費用", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date"), c("公司代號", "收入", "支出", "本期淨利（淨損）", "本期綜合損益總額", "基本每股盈餘（元）", "date")     )     listall <- list();     dateIndex <- 0;     for (i in 1:6) {         listall[[i]] <- data.frame();     }     for (i in 1:1) {         #5         s <- 1;#4         if (i == 5) s <- 1;         for (j in 1:s) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(bsURL, encoding = "UTF-8");                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 listseason <- All %>% GetIndex() %>% GetisRaw(All) %>% ClearisRaw(dateIndex);                 for (k in 1:length(listseason)) {                     listall[[k]] <- rbind(listall[[k]], listseason[[k]][, Parameter[[k]]])                 }                 Sys.sleep(sample(2:5, size = 1));             }         }     }     return(listall) }
isreport <- Getisreport() %>% GetNumericReport();
`Industry` <- read.csv(file="C:/Users/user/AppData/Local/Temp/Industry.csv.utf8", header=TRUE, row.names=NULL, encoding="UTF-8", sep=",", dec=".", quote="\"", comment.char="")
`StockMarket_script_bs_[[3]]` <- read.csv(file="C:/Users/user/AppData/Local/Temp/StockMarket_script_bs_[[3]].csv.utf8", header=TRUE, row.names=NULL, encoding="UTF-8", sep=",", dec=".", quote="", comment.char="")
gsub("'","", Industry$`X.公司代號.`)
 Industry$`X.公司代號.`
Industry$`X.公司代號.` <- gsub("'", "", Industry$`X.公司代號.`)
Industry
?merge
test<-merge(`StockMarket_script_bs_[[3]]`, Industry,by.x="X.公司代號",by.y="X.公司代號.")
test<-merge(`StockMarket_script_bs_[[3]]`, Industry,by.x="X.公司代號.",by.y="X.公司代號.")
14171/16
`StockMarket_script_is_[[3]]` <- read.csv(file="C:/Users/user/AppData/Local/Temp/StockMarket_script_is_[[3]].csv.utf8", header=TRUE, row.names=NULL, encoding="UTF-8", sep=",", dec=".", quote="", comment.char="")
mtest2<-merge(test, `StockMarket_script_is_[[3]]`, by.x = c("X.公司代號.", "X.date."), by.y = c("X.公司代號.", "X.date."))
`StockMarket_script_bs_[[1]]` <- read.csv(file="C:/Users/user/AppData/Local/Temp/StockMarket_script_bs_[[1]].csv.utf8", header=TRUE, row.names=NULL, encoding="UTF-8", sep=",", dec=".", quote="", comment.char="")
StockMarket_script_bs_1 <- `StockMarket_script_bs_[[1]]
StockMarket_script_bs_1 <- `StockMarket_script_bs_[[1]]`
StockMarket_script_bs_1 <- `StockMarket_script_bs_[[1]]`[,-1]
StockMarket_script_bs_1
names(StockMarket_script_bs_1)<-c("公司代號","現金及約當現金","應收款項","資產總額","負債總額","股本","每股參考淨值","日期")
rm(StockMarket_script_bs_1, envir = as.environment(".GlobalEnv"))
test<-names(StockMarket_script_bs_1) <- c("公司代號", "現金及約當現金", "應收款項", "資產總額", "負債總額", "股本", "每股參考淨值", "日期")
StockMarket_script_bs_1 <- `StockMarket_script_bs_[[1]]`[,-1]
test<-names(StockMarket_script_bs_1) <- c("公司代號", "現金及約當現金", "應收款項", "資產總額", "負債總額", "股本", "每股參考淨值", "日期")
write.table(test, file = "C:\Users\user\Documents\Investment Plan\StockMarket\BalanceSheet\test", sep = ",", col.names = NA, qmethod = "double", fileEncoding ="CP 950" )
write.table(test, file = "C:/Users/user/Documents/Investment Plan/StockMarket/BalanceSheet/test", sep = ",", col.names = NA, qmethod = "double", fileEncoding ="CP 950" )
rm(test, envir = as.environment(".GlobalEnv"))
names(StockMarket_script_bs_1) <- c("公司代號", "現金及約當現金", "應收款項", "資產總額", "負債總額", "股本", "每股參考淨值", "日期")
write.table(StockMarket_script_bs_1, file = "C:/Users/user/Documents/Investment Plan/StockMarket/BalanceSheet/test", sep = ",", col.names = NA, qmethod = "double", fileEncoding = "CP 950")
write.table(StockMarket_script_bs_1, file = "C:/Users/user/Documents/Investment Plan/StockMarket/BalanceSheet/test", sep = ",", col.names = NA, qmethod = "double", fileEncoding = "Big5")
write.table(StockMarket_script_bs_1, file = "C:/Users/user/Documents/Investment Plan/StockMarket/BalanceSheet/test", sep = ",", col.names = NA, qmethod = "double", fileEncoding = "UTF-8")
write.table(StockMarket_script_bs_1, file = "C:/Users/user/Documents/Investment Plan/StockMarket/BalanceSheet/test", sep = ",", col.names = NA, fileEncoding = "UTF-8")
install.packages("RODBC")
library(RODBC)
LOCAL<-odbcConnect("LOCAL")
`StockMarket_script_bs_[[1]]` <- read.csv(file="C:/Users/user/AppData/Local/Temp/StockMarket_script_bs_[[1]].csv.utf8", header=TRUE, row.names=NULL, encoding="UTF-8", sep=",", dec=".", quote="", comment.char="")
StockMarket_script_bs_1 <- `StockMarket_script_bs_[[1]]`[,-1]
names(StockMarket_bs_1) <- c("公司代號", "現金及約當現金", "應收款項", "資產總額", "負債總額", "股本", "每股參考淨值", "日期")
StockMarket_bs_1 <- `StockMarket_script_bs_[[1]]`[, -1]
library(magrittr)
sqlSave(LOCAL,StockMarket_bs_1,append = TRUE)
names(StockMarket_bs_1) <- c("公司代號", "現金及約當現金", "應收款項", "資產總額", "負債總額", "股本", "每股參考淨值", "日期")
sqlSave(LOCAL,StockMarket_bs_1,append = TRUE)
sqlSave(LOCAL,StockMarket_bs_1,rownames = FALSE,append = TRUE)
library(RODBC)
library(magrittr)
LOCAL<-odbcConnect("LOCAL")
StockMarket_script_CashFlowAll$date <-StockMarket_script_CashFlowAll$date*4
StockMarket_script_CashFlowAll <- StockMarket_script_CashFlowAll[, -1]
names(StockMarket_script_CashFlowAll)<-c("營業活動之淨現金流","投資活動之淨現金流","籌資活動之淨現金流","date","company","自由現金流")
sqlSave(LOCAL, StockMarket_script_CashFlowAll,tablename = "Cash Flow", rownames = FALSE, append = TRUE)
LOCAL<-odbcConnect("LOCAL")
Qry <- "Select * from Balance Sheet_1"
LOCAL%>% sqlQuery(Qry)
LOCAL<-odbcConnect("LOCAL")
LOCAL%>% sqlQuery(Qry)
Qry <- "Select * from [master].[dbo][Balance Sheet_1]"
LOCAL%>% sqlQuery(Qry)
Qry <- "Select * from [master].[dbo].[Balance Sheet_1]"
LOCAL%>% sqlQuery(Qry)
BS<-LOCAL %>% sqlQuery(QryBS)
library(magrittr)
BS<-LOCAL %>% sqlQuery(QryBS)
library(RODBC)
library(magrittr)
LOCAL<-odbcConnect("LOCAL")
QryBS <- "Select * from [master].[dbo].[Balance Sheet_1]"
QryIS <-"Select * from [master].[dbo].[Balance Sheet_1]"
QryCF<-"Select * from [master].[dbo].[Cash Flow]"
BS<-LOCAL %>% sqlQuery(QryBS)
IS <- LOCAL %>% sqlQuery(QryIS)
CF <- LOCAL %>% sqlQuery(QryCF)
merge(CF,BS,by.x=c("date","company"),by.y=c("公司代號","date"))
merge(CF,BS,by.x=c("date","company"),by.y=c("date","公司代號"))
m1<-merge(CF,BS,by.x=c("date","company"),by.y=c("date","公司代號"))
m2 <- merge(m1, IS, by.x = c("date", "company"), by.y = c("date", "公司代號"))
?merge
m1 <- merge(CF, BS, by.x = c("date", "company"), by.y = c("date", "公司代號"), suffixes = "")
m2 <- merge(m1, IS, by.x = c("date", "company"), by.y = c("date", "公司代號"), suffixes = "")
m1 <- merge(CF, BS, by.x = c("date", "company"), by.y = c("date", "公司代號"), suffixes = '')
m2 <- merge(m1, IS, by.x = c("date", "company"), by.y = c("date", "公司代號"), suffixes = '')
m1 <- merge(CF, BS, by.x = c("date", "company"), by.y = c("date", "公司代號"), suffixes = 'bs')
m2 <- merge(m1, IS, by.x = c("date", "company"), by.y = c("date", "公司代號"), suffixes = 'is')
m1 <- merge(CF, BS, by.x = c("date", "company"), by.y = c("date", "公司代號"))
m2 <- merge(m1, IS, by.x = c("date", "company"), by.y = c("date", "公司代號"), suffixes = c('bs','is'))
m1 <- merge(CF, BS, by.x = c("date", "company"), by.y = c("date", "公司代號"), suffixes = c('cf', 'bs'))
m2 <- merge(m1, IS, by.x = c("date", "company"), by.y = c("date", "公司代號"), suffixes = c('bs','is'))
m1 <- merge(CF, BS, by.x = c("date", "company"), by.y = c("date", "公司代號"))
m2 <- merge(m1, IS, by.x = c("date", "company"), by.y = c("date", "公司代號"), suffixes = c('bs','is'))
QryBS <- "Select * from [master].[dbo].[Balance Sheet_1]"
QryIS <-"Select * from [master].[dbo].[Income Statement_1]"
QryCF<-"Select * from [master].[dbo].[Cash Flow]"
BS<-LOCAL %>% sqlQuery(QryBS)
IS <- LOCAL %>% sqlQuery(QryIS)
CF <- LOCAL %>% sqlQuery(QryCF)
m1 <- merge(CF, BS, by.x = c("date", "company"), by.y = c("date", "公司代號"))
m2 <- merge(m1, IS, by.x = c("date", "company"), by.y = c("date", "公司代號"))
for (i in 1:6) { QryBS <- paste0("Select * from [master].[dbo].[Balance Sheet_",i,"]") QryIS <-paste0("Select * from [master].[dbo].[Income Statement_",i,"]") QryCF<-"Select * from [master].[dbo].[Cash Flow]" BS<-LOCAL %>% sqlQuery(QryBS) IS <- LOCAL %>% sqlQuery(QryIS) CF <- LOCAL %>% sqlQuery(QryCF) m1 <- merge(CF, BS, by.x = c("date", "company"), by.y = c("date", "公司代號")) m2 <- merge(m1, IS, by.x = c("date", "company"), by.y = c("date", "公司代號")) sqlSave(LOCAL, m2, tablename = paste0("Aggregate_",i,""), rownames = FALSE, append = TRUE) }
library(magrittr)
library(RODBC)
LOCAL <- odbcConnect("LOCAL")
library(RODBC)
library(magrittr)
library(RODBC)
Qry1<-"SELECT  * 	  ,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額稅後]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE   FROM [master].[dbo].[Aggregate_1]" Qry2 <- "SELECT  * 	  ,[營業活動之淨現金流]/[權益合計] as CoOE 	  ,[本期綜合損益總額]/[權益合計] as ROE 	  ,[自由現金流]/[權益合計] as CfOE   FROM [master].[dbo].[Aggregate_2]" Qry3 <- "SELECT * 	  ,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE   FROM [master].[dbo].[Aggregate_3]" Qry4<- "SELECT * 	    ,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE   FROM [master].[dbo].[Aggregate_4]" Qry5 <- "SELECT * 	     ,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE   FROM [master].[dbo].[Aggregate_5]" Qry6 <- "SELECT * 	  ,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE   FROM [master].[dbo].[Aggregate_6]"
LOCAL%>% sqlQuery(Qry1)
LOCAL <- odbcConnect("LOCAL")
LOCAL%>% sqlQuery(Qry1)
test<-LOCAL%>% sqlQuery(Qry1)
colnames(test)
DrawResultROE <- function(Sheet, Sheettype) {     for (Company in unique(Sheet$company)) {         for (Colname in colnames(Sheet)) {             if (Colname != "CoOE" || Colname != "ROE" || Colname!="CfOE") next             qplot(Sheet[Sheet$company == Company,]$date, Sheet[Sheet$company == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company_", Company, "_", "Index_", Colname, ".png"), path = paste0("C:/Users/user/Investment Plan/StockMarket/", Sheettype))             unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"))         }     } }
DrawResultROE(test,"ROE")
colnames(test)
DrawResultROE(test,"ROE")
test
DrawResultROE <- function(Sheet, Sheettype) {     for (Company in unique(Sheet$company)) {         for (Colname in colnames(Sheet)) {             if (Colname != "CoOE" | Colname != "ROE" | Colname!="CfOE") next             qplot(Sheet[Sheet$company == Company,]$date, Sheet[Sheet$company == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company_", Company, "_", "Index_", Colname, ".png"), path = paste0("C:/Users/user/Investment Plan/StockMarket/", Sheettype))             unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"))         }     } }
DrawResultROE(test,"ROE")
DrawResultROE <- function(Sheet, Sheettype) {     for (Company in unique(Sheet$company)) {         for (Colname in colnames(Sheet)) {             if (Colname != "CoOE" & Colname != "ROE" & Colname!="CfOE") next             qplot(Sheet[Sheet$company == Company,]$date, Sheet[Sheet$company == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company_", Company, "_", "Index_", Colname, ".png"), path = paste0("C:/Users/user/Investment Plan/StockMarket/", Sheettype))             unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"))         }     } }
DrawResultROE(test,"ROE")
library(ggplot2)
DrawResultROE(test,"ROE")
DrawResultROE <- function(Sheet, Sheettype) {     for (Company in unique(Sheet$company)) {         for (Colname in colnames(Sheet)) {             if (Colname != "CoOE" & Colname != "ROE" & Colname!="CfOE") next             qplot(Sheet[Sheet$company == Company,]$date, Sheet[Sheet$company == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company_", Company, "_", "Index_", Colname, ".png"), path = paste0("C:/Users/user/Investment Plan/StockMarket/", Sheettype))            # unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"))         }     } }
DrawResultROE(test,"ROE")
test
DrawResultROE <- function(Sheet, Sheettype) {     for (Company in unique(Sheet$company)) {         for (Colname in colnames(Sheet)) {             if (!(Colname == "CoOE" || Colname == "ROE" || Colname=="CfOE")) next             qplot(Sheet[Sheet$company == Company,]$date, Sheet[Sheet$company == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company_", Company, "_", "Index_", Colname, ".png"), path = paste0("C:/Users/user/Investment Plan/StockMarket/", Sheettype))             unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"))         }     } }
DrawResultROE(test,"ROE")
qplot(Sheet[Sheet$company == "2801",]$date, Sheet[Sheet$company == "2801",][, c("ROE")], geom = c("point", "line")) + ggtitle(paste("2801", " ", "ROE")) + labs(x = "Date", y = "ROE")
qplot(test[test$company == "2801",]$date, test[Sheet$company == "2801",][, c("ROE")], geom = c("point", "line")) + ggtitle(paste("2801", " ", "ROE")) + labs(x = "Date", y = "ROE")
qplot(test[test$company == "2801",]$date, test[test$company == "2801",][, c("ROE")], geom = c("point", "line")) + ggtitle(paste("2801", " ", "ROE")) + labs(x = "Date", y = "ROE")
ggsave(paste0("Company_", "2801", "_", "Index_", "ROE", ".png"), path = paste0("C:/Users/user/Investment Plan/StockMarket/", "ROE"))
ggsave(paste0("Company_", "2801", "_", "Index_", "ROE", ".png"), path = paste0("C:/Users/user/Investment Plan/StockMarket"))
unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"), height = 9, width = 12, dpi = 72)
ggsave(paste0("Company_", "2801", "_", "Index_", "ROE", ".png"), path = paste0("C:/Users/user/Investment Plan/StockMarket"), height = 9, width = 12, dpi = 72)
ggsave(paste0("Company_", "2801", "_", "Index_", "ROE", ".png"), path = paste0("C:/Users/user/Investment Plan/StockMarket"))
ggsave(paste0("Company_", "2801", "_", "Index_", "ROE", ".png"), path = paste0("C:/Users/user/Investment Plan/StockMarket"))
ggsave(paste0("Company_", "2801", "_", "Index_", "ROE", ".png"), path ="C:/Users/user/Investment Plan/StockMarket")
library(RODBC)
library(ggplot2)
library(magrittr)
install.packages("ggplot2")
install.packages("magrittr")
LOCAL <- odbcConnect("LOCAL")
Qry1<-"SELECT  *  ,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額稅後]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE   FROM [master].[dbo].[Aggregate_1]"
test <- LOCAL %>% sqlQuery(Qry1)
library(RODBC)
library(ggplot2)
library(magrittr)
test <- LOCAL %>% sqlQuery(Qry1)
qplot(test[test$company == "2801",]$date, test[test$company == "2801",][, c("ROE")], geom = c("point", "line")) + ggtitle(paste("2801", " ", "ROE")) + labs(x = "Date", y = "ROE")
ggsave(paste0("Company_", "2801", "_", "Index_", "ROE", ".png"), path ="C:/Users/user/Investment Plan/StockMarket")
?ggsave
ggsave(paste0("Company_", "2801", "_", "Index_", "ROE", ".png"), path = "C:/Users/user/Investment Plan/StockMarket", units = c("in"))
ggsave(paste0("Company_", "2801", "_", "Index_", "ROE", ".png"), plot = last_plot(), path = "C:/Users/user/Investment Plan/StockMarket", units = c("in"))
ggsave(paste0("Company_", "2801", "_", "Index_", "ROE", ".png"), plot = last_plot(), path = "C:/Users/user/Investment Plan/StockMarket")
ggsave(paste0("Company_", "2801", "_", "Index_", "ROE", ".png"), device = "png",plot = last_plot(), path = "C:/Users/user/Investment Plan/StockMarket")
ggsave(paste0("Company_", "2801", "_", "Index_", "ROE", ".bmp"), device = "bmp",plot = last_plot(), path = "C:/Users/user/Investment Plan/StockMarket")
ggsave(paste0("Company_", "2801", "_", "Index_", "ROE", ".bmp"), device = "bmp",plot = last_plot(), path = "C:/Users/user/Investment Plan/StockMarket")
ggsave(paste0("Company_", "2801", "_", "Index_", "ROE", ".png"),plot = last_plot(), path = "C:/Users/user/Investment Plan/StockMarket")
ggsave(paste0("Company_", "2801", "_", "Index_", "ROE", ".png"),plot = last_plot(), path = "C:/Users/user/")
ggsave(paste0("Company_", "2801", "_", "Index_", "ROE", ".png"), path = "C:/Users/user/InvestmentPlan/StockMarket")
DrawResultROE <- function(Sheet, Sheettype) {     for (Company in unique(Sheet$company)) {         for (Colname in colnames(Sheet)) {             if (!(Colname == "CoOE" || Colname == "ROE" || Colname=="CfOE")) next             qplot(Sheet[Sheet$company == Company,]$date, Sheet[Sheet$company == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company_", Company, "_", "Index_", Colname, ".png"), path = paste0("C:/Users/user/Documents/Investment Plan/StockMarket/", Sheettype))             unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"))         }     } }
DrawResultROE(test,"ROE")
library(RODBC)
library(ggplot2)
library(magrittr)
LOCAL <- odbcConnect("LOCAL")
Qry1<-"SELECT  *  ,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額稅後]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE   FROM [master].[dbo].[Aggregate_1]" Qry2 <- "SELECT  * 	  ,[營業活動之淨現金流]/[權益合計] as CoOE 	  ,[本期綜合損益總額]/[權益合計] as ROE 	  ,[自由現金流]/[權益合計] as CfOE   FROM [master].[dbo].[Aggregate_2]" Qry3 <- "SELECT * 	  ,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE   FROM [master].[dbo].[Aggregate_3]" Qry4<- "SELECT * 	    ,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE   FROM [master].[dbo].[Aggregate_4]" Qry5 <- "SELECT * 	     ,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE   FROM [master].[dbo].[Aggregate_5]" Qry6 <- "SELECT * 	  ,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE   FROM [master].[dbo].[Aggregate_6]"
R1 <- LOCAL %>% sqlQuery(Qry1) R2 <- LOCAL %>% sqlQuery(Qry2) R3 <- LOCAL %>% sqlQuery(Qry3) R4 <- LOCAL %>% sqlQuery(Qry4) R5 <- LOCAL %>% sqlQuery(Qry5) R6 <- LOCAL %>% sqlQuery(Qry6)
DrawResultROE(R1, "ROE") DrawResultROE(R2, "ROE") DrawResultROE(R3, "ROE") DrawResultROE(R4, "ROE") DrawResultROE(R5, "ROE") DrawResultROE(R6, "ROE")
DrawResultROE <- function(Sheet, Sheettype) {     for (Company in unique(Sheet$company)) {         for (Colname in colnames(Sheet)) {             if (!(Colname == "CoOE" || Colname == "ROE" || Colname=="CfOE")) next             qplot(Sheet[Sheet$company == Company,]$date, Sheet[Sheet$company == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company_", Company, "_", "Index_", Colname, ".png"), path = paste0("C:/Users/user/Documents/Investment Plan/StockMarket/", Sheettype))             unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"))         }     } }
DrawResultROE(R1, "ROE") DrawResultROE(R2, "ROE") DrawResultROE(R3, "ROE") DrawResultROE(R4, "ROE") DrawResultROE(R5, "ROE") DrawResultROE(R6, "ROE")
library(RODBC)
library(magrittr)
LOCAL <- odbcConnect("LOCAL")
Qry1 <- "SELECT [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額稅後]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額稅後]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_1]  " Qry2 <- "SELECT  	  [營業活動之淨現金流]/[權益合計] as CoOE 	  ,[本期綜合損益總額]/[權益合計] as ROE 	  ,[自由現金流]/[權益合計] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益合計]/0.08) as K值法   FROM [master].[dbo].[Aggregate_2] " Qry3 <- "SELECT  	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_3]" Qry4 <- "SELECT  	    [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_4] " Qry5 <- "SELECT  	     [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_5]" Qry6 <- "SELECT  	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_6]" R1 <- LOCAL %>% sqlQuery(Qry1) R2 <- LOCAL %>% sqlQuery(Qry2) R3 <- LOCAL %>% sqlQuery(Qry3) R4 <- LOCAL %>% sqlQuery(Qry4) R5 <- LOCAL %>% sqlQuery(Qry5) R6 <- LOCAL %>% sqlQuery(Qry6)
All<-rbind(R1,R2,R3,R4,R5,R6)
Qry1 <- "SELECT  date,company,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額稅後]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額稅後]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_1]  " Qry2 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益合計] as CoOE 	  ,[本期綜合損益總額]/[權益合計] as ROE 	  ,[自由現金流]/[權益合計] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益合計]/0.08) as K值法   FROM [master].[dbo].[Aggregate_2] " Qry3 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_3]" Qry4 <- "SELECT   date,company, 	    [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_4] " Qry5 <- "SELECT   date,company, 	     [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_5]" Qry6 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_6]" R1 <- LOCAL %>% sqlQuery(Qry1) R2 <- LOCAL %>% sqlQuery(Qry2) R3 <- LOCAL %>% sqlQuery(Qry3) R4 <- LOCAL %>% sqlQuery(Qry4) R5 <- LOCAL %>% sqlQuery(Qry5) R6 <- LOCAL %>% sqlQuery(Qry6)
All <- rbind(R1, R2, R3, R4, R5, R6)
All[All$date=16]
All[All$date==16,]
All<-All[All$date==16,]
library(RODBC) library(ggplot2) library(magrittr)
LOCAL <- odbcConnect("LOCAL")
R1 <- LOCAL %>% sqlQuery(Qry1) R2 <- LOCAL %>% sqlQuery(Qry2) R3 <- LOCAL %>% sqlQuery(Qry3) R4 <- LOCAL %>% sqlQuery(Qry4) R5 <- LOCAL %>% sqlQuery(Qry5) R6 <- LOCAL %>% sqlQuery(Qry6)
Qry1 <- "SELECT  date,company,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額稅後]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額稅後]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_1]  " Qry2 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益合計] as CoOE 	  ,[本期綜合損益總額]/[權益合計] as ROE 	  ,[自由現金流]/[權益合計] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益合計]/0.08) as K值法   FROM [master].[dbo].[Aggregate_2] " Qry3 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_3]" Qry4 <- "SELECT   date,company, 	    [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_4] " Qry5 <- "SELECT   date,company, 	     [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_5]" Qry6 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_6]" R1 <- LOCAL %>% sqlQuery(Qry1) R2 <- LOCAL %>% sqlQuery(Qry2) R3 <- LOCAL %>% sqlQuery(Qry3) R4 <- LOCAL %>% sqlQuery(Qry4) R5 <- LOCAL %>% sqlQuery(Qry5) R6 <- LOCAL %>% sqlQuery(Qry6) All <- rbind(R1, R2, R3, R4, R5, R6)
All$company==4807 %>% All[.,]
All$company=="4807" %>% All[.,]
(All$company=="4807")
(All$company=="4807") %>% All[.,]
23.88*101062/1011677/0.08
mean(67,82,47)
mean(c(67,82,47))
All$ROE>0.1 %>% All[.,]
(All$ROE>0.1) %>% All[.,]
(All$ROE > 0.2) %>% All[.,]
Big0.2<-(All$company=="4807") %>% All[.,]
Big0.2 <- (All$ROE > 0.2) %>% All[.,]
(All$company=="4807") %>% All[.,]
83+81+34
198/3
67+82+48
Qry1 <- "SELECT  date,company,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額稅後]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額稅後]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_1]  " Qry2 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益合計] as CoOE 	  ,[本期綜合損益總額]/[權益合計] as ROE 	  ,[自由現金流]/[權益合計] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益合計]/0.08) as K值法   FROM [master].[dbo].[Aggregate_2] " 23.88*101062/1011677/0.08 Qry3 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_3]" Qry4 <- "SELECT   date,company, 	    [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_4] " Qry5 <- "SELECT   date,company, 	     [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_5]" Qry6 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_6]" R1 <- LOCAL %>% sqlQuery(Qry1) R2 <- LOCAL %>% sqlQuery(Qry2) R3 <- LOCAL %>% sqlQuery(Qry3) R4 <- LOCAL %>% sqlQuery(Qry4) R5 <- LOCAL %>% sqlQuery(Qry5) R6 <- LOCAL %>% sqlQuery(Qry6) All <- rbind(R1, R2, R3, R4, R5, R6)
library(RODBC)
library(ggplot2)
library(magrittr)
LOCAL <- odbcConnect("LOCAL")
Qry1 <- "SELECT  date,company,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額稅後]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額稅後]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_1]  " Qry2 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益合計] as CoOE 	  ,[本期綜合損益總額]/[權益合計] as ROE 	  ,[自由現金流]/[權益合計] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益合計]/0.08) as K值法   FROM [master].[dbo].[Aggregate_2] " 23.88*101062/1011677/0.08 Qry3 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_3]" Qry4 <- "SELECT   date,company, 	    [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_4] " Qry5 <- "SELECT   date,company, 	     [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_5]" Qry6 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_6]" R1 <- LOCAL %>% sqlQuery(Qry1) R2 <- LOCAL %>% sqlQuery(Qry2) R3 <- LOCAL %>% sqlQuery(Qry3) R4 <- LOCAL %>% sqlQuery(Qry4) R5 <- LOCAL %>% sqlQuery(Qry5) R6 <- LOCAL %>% sqlQuery(Qry6) All <- rbind(R1, R2, R3, R4, R5, R6)
Big0.2 <- (All$ROE <= 0.2&All$ROE>0.15) %>% All[.,]
Big0.2 <- (All$ROE <= 0.2&All$ROE>0.18) %>% All[.,]
Big0.2 <- (All$ROE <= 0.2&All$ROE>0.15) %>% All[.,]
Companylist <- c(1232, 1476, 1537, 1707, 2207, 2231, 2330, 2408, 2707, 2912, 3008, 3045, 3130, 3450, 4807, 6409, 8114, 8422, 9910 )
GetSotckPrice <- function(Company) {     priceall <- list(); bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=106&season=01"); Source <- read_html(bsURL, encoding = "UTF-8") All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text; Index <- grep(pattern = "[0-9]{4}", All); #Company <- All[Index]; for (company in Company) {     url <- paste0("http://www.twse.com.tw/exchangeReport/FMNPTK?response=json&stockNo=", company, "&_")     tryCatch(result <- read_json(url) ,error = function(e) {print("error") },finally = print(company))     price <- data.frame(matrix(ncol = length(result$fields), nrow = 1))     if (length(result$fields) < 1) { print(result); next; }     names(price) <- result$fields     for (r in result$data) {         price <- rbind(price, r)     }     price[, "公司"] <- company     priceall <- rbind(priceall, price)     Sys.sleep(sample(2:6, size = 1)); }  }
library(rvest)
library(httr)
library(magrittr)
library(jsonlite)
Companylist <- c(1232, 1476, 1537, 1707, 2207, 2231, 2330, 2408, 2707, 2912, 3008, 3045, 3130, 3450, 4807, 6409, 8114, 8422, 9910 )
ttt<-GetSotckPrice(Companylist)
library(rvest)
library(httr)
library(magrittr)
#library(sqldf)
library(ggplot2)
library(jsonlite)
ttt<-GetSotckPrice(Companylist)
library(rvest)
library(rvest)
library(httr)
library(magrittr)
#library(sqldf)
library(ggplot2)
library(jsonlite)
GetSotckPrice <- function(Company) {     priceall <- list(); bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=106&season=01"); Source <- read_html(bsURL, encoding = "UTF-8") All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text; Index <- grep(pattern = "[0-9]{4}", All); #Company <- All[Index]; for (company in Company) {     url <- paste0("http://www.twse.com.tw/exchangeReport/FMNPTK?response=json&stockNo=", company, "&_")     tryCatch(result <- read_json(url) ,error = function(e) {print("error") },finally = print(company))     price <- data.frame(matrix(ncol = length(result$fields), nrow = 1))     if (length(result$fields) < 1) { print(result); next; }     names(price) <- result$fields     for (r in result$data) {         price <- rbind(price, r)     }     price[, "公司"] <- company     priceall <- rbind(priceall, price)     Sys.sleep(sample(2:6, size = 1)); }  }
Companylist <- c(1232, 1476, 1537, 1707, 2207, 2231, 2330, 2408, 2707, 2912, 3008, 3045, 3130, 3450, 4807, 6409, 8114, 8422, 9910 )
ttt<-GetSotckPrice(Companylist)
ttt<-GetSotckPrice(Companylist)
GetSotckPrice <- function(Company) {     priceall <- list(); bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=106&season=01"); Source <- read_html(bsURL, encoding = "UTF-8") All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text; Index <- grep(pattern = "[0-9]{4}", All); #Company <- All[Index]; for (company in Company) {     url <- paste0("http://www.twse.com.tw/exchangeReport/FMNPTK?response=json&stockNo=", company, "&_")     tryCatch(result <- read_json(url) ,error = function(e) {print("error") },finally = print(company))     price <- data.frame(matrix(ncol = length(result$fields), nrow = 1))     if (length(result$fields) < 1) { print(result); next; }     names(price) <- result$fields     for (r in result$data) {         price <- rbind(price, r)     }     price[, "公司"] <- company     priceall <- rbind(priceall, price)     Sys.sleep(sample(2:3, size = 1)); }     return(priceall)  }
ttt<-GetSotckPrice(Companylist)
library(RODBC)
library(ggplot2)
library(magrittr)
LOCAL <- odbcConnect("LOCAL")
Qry1 <- "SELECT  date,company,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額稅後]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額稅後]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_1]  " Qry2 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益合計] as CoOE 	  ,[本期綜合損益總額]/[權益合計] as ROE 	  ,[自由現金流]/[權益合計] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益合計]/0.08) as K值法   FROM [master].[dbo].[Aggregate_2] " 23.88*101062/1011677/0.08 Qry3 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_3]" Qry4 <- "SELECT   date,company, 	    [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_4] " Qry5 <- "SELECT   date,company, 	     [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_5]" Qry6 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_6]"
Qry1 <- "SELECT  date,company,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額稅後]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額稅後]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_1]  " Qry2 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益合計] as CoOE 	  ,[本期綜合損益總額]/[權益合計] as ROE 	  ,[自由現金流]/[權益合計] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益合計]/0.08) as K值法   FROM [master].[dbo].[Aggregate_2] " 23.88*101062/1011677/0.08 Qry3 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_3]" Qry4 <- "SELECT   date,company, 	    [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_4] " Qry5 <- "SELECT   date,company, 	     [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_5]" Qry6 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法   FROM [master].[dbo].[Aggregate_6]" R1 <- LOCAL %>% sqlQuery(Qry1) R2 <- LOCAL %>% sqlQuery(Qry2) R3 <- LOCAL %>% sqlQuery(Qry3) R4 <- LOCAL %>% sqlQuery(Qry4) R5 <- LOCAL %>% sqlQuery(Qry5) R6 <- LOCAL %>% sqlQuery(Qry6) All <- rbind(R1, R2, R3, R4, R5, R6)
(All$company=="4919") %>% All[.,]
(All$company=="1463") %>% All[.,]
mean(c(7.14,55.3,4.62,8.82))
(All$company=="6201") %>% All[.,]
mean(((All$company == "6201") %>% All[.,])$本益比法)
mean(((All$company == "6201") %>% All[.,])$K值法)
29.82 + 25.17063
(29.82 + 25.17063)/2
library(rvest)
library(httr)
library(magrittr)
#library(sqldf)
library(ggplot2)
library(jsonlite)
GetReviewReport <- function() {     Result <- data.frame(company = 0, companyN = 0, comment = 0, date = 0, type = 0);     Result <- Result[0,];     for (i in 1:5) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             if (TRUE) {                 reviewURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb14?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(reviewURL, encoding = "UTF-8");                 CompanyR <- Source %>% html_nodes(css = "td:nth-child(1)") %>% html_text;                 Length <- length(CompanyR);                 if (Length == 0) break;                 CompanyNR <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                 CommentR <- Source %>% html_nodes(css = "td:nth-child(7)") %>% html_text;                 result <- data.frame(company = c(1:Length), companyN = c(1:Length), comment = c(1:Length), date = c(1:Length), type = c(1:Length));                 result$company <- CompanyR;                 result$companyN <- CompanyNR;                 result$comment <- CommentR;                 result$date <- date;                 if (j == 4) { result$type <- 'Year'; } else { result$type <- 'Season'; }                 Result <- rbind(Result, result);                 Sys.sleep(sample(2:5, size = 1));             }         }     }     Result$comment <- trimws(Result$comment);     #Result <- Result[Result$comment == '無保留意見',];     return(Result) } ReviewReport<- GetReviewReport()
GetReviewReport <- function() {     Result <- data.frame(company = 0, companyN = 0, comment = 0, date = 0, type = 0);     Result <- Result[0,];     for (i in 1:5) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             if (TRUE) {                 reviewURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb14?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(reviewURL, encoding = "UTF-8");                 CompanyR <- Source %>% html_nodes(css = "td:nth-child(1)") %>% html_text;                 Length <- length(CompanyR);                 if (Length == 0) break;                 CompanyNR <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                 CommentR <- Source %>% html_nodes(css = "td:nth-child(7)") %>% html_text;                 result <- data.frame(company = c(1:Length), companyN = c(1:Length), comment = c(1:Length), date = c(1:Length), type = c(1:Length));                 result$company <- CompanyR;                 result$companyN <- CompanyNR;                 result$comment <- CommentR;                 result$date <- date;                 if (j == 4) { result$type <- 'Year'; } else { result$type <- 'Season'; }                 Result <- rbind(Result, result);                 Sys.sleep(sample(2:5, size = 1));             }         }     }     Result$comment <- trimws(Result$comment);     #Result <- Result[Result$comment == '無保留意見',];     return(Result) } ReviewReport<- GetReviewReport()
ReviewReport[ReviewReport$company=="4807",]
ReviewReport[ReviewReport$company=="6201",]
ReviewReport[ReviewReport$company=="4952",]
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）","　發放現金股利")     dateIndex <- 0;     listall <- list();     for (i in 4:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")                     },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             print(Source)                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(3:4, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
library(rvest) library(httr) library(magrittr) #library(sqldf) library(ggplot2) library(jsonlite)
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）","　發放現金股利")     dateIndex <- 0;     listall <- list();     for (i in 4:4) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")                     },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             print(Source)                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(3:4, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
CashFlow05<-Getcfreport();
CashFlow05<-Getcfreport();
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）","　發放現金股利")     dateIndex <- 0;     listall <- list();     for (i in 3:3) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")                     },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             print(Source)                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(3:4, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
CashFlow04<-Getcfreport();
CashFlow05$date<-16
class(CashFlow05$`　投資活動之淨現金流入（流出）`)
CashFlow05$`　投資活動之淨現金流入（流出）`[1]
CashFlow05$`　投資活動之淨現金流入（流出）`[1]+1
gsub(pattern = ",",replacement = "",CashFlow05)
gsub(pattern = ",",replacement = "",CashFlow05$`　投資活動之淨現金流入（流出）`)
library(magrittr)
gsub(pattern = ",",replacement = "",CashFlow05$`　投資活動之淨現金流入（流出）`) %>% as.numeric
CashFlow05$`　投資活動之淨現金流入（流出）` %>% as.numeric
CashFlow05$`　投資活動之淨現金流入（流出）` <- gsub(pattern = ",", replacement = "", CashFlow05$`　投資活動之淨現金流入（流出）`) %>% as.numeric
CashFlow05$`　發放現金股利` <- gsub(pattern = ",", replacement = "", CashFlow05$`　發放現金股利`) %>% as.numeric
CashFlow05$`　籌資活動之淨現金流入（流出）` <- gsub(pattern = ",", replacement = "", CashFlow05$`　籌資活動之淨現金流入（流出）`) %>% as.numeric
CashFlow05$`營業活動之淨現金流入（流出）` <- gsub(pattern = ",", replacement = "", CashFlow05$`營業活動之淨現金流入（流出）`) %>% as.numeric
library(RODBC)
LOCAL<-odbcConnect("LOCAL")
names(CashFlow05) <- c("營業活動之淨現金流", "投資活動之淨現金流", "籌資活動之淨現金流","發放現金股利", "date", "company")
sqlSave(LOCAL, CashFlow05, tablename = "CashFlow05", rownames = FALSE, append = TRUE)
library(RODBC)
library(magrittr)
library(rvest)
library(httr)
library(magrittr)
#library(sqldf)
library(ggplot2)
library(jsonlite)
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）","　發放現金股利")     dateIndex <- 0;     listall <- list();     for (i in 3:3) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")                     },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             print(Source)                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(3:4, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
CashFlow04 <- Getcfreport();
CashFlow04 <- Getcfreport();
CashFlow04 <- Getcfreport();
CashFlow04 <- Getcfreport();
library(rvest) library(httr) library(magrittr) #library(sqldf) library(ggplot2) library(jsonlite)
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）","　發放現金股利")     dateIndex <- 0;     listall <- list();     for (i in 3:3) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")                     },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             print(Source)                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(3:4, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) } CashFlow04 <- Getcfreport();
CashFlow04 <- Getcfreport();
CashFlow4
CashFlow04
CashFlow04$date<-12
CashFlow04$`營業活動之淨現金流（流出）` <- gsub(pattern = ",", replacement = "", CashFlow04$`營業活動之淨現金流（流出）`) %>% as.numeric
gsub(pattern = ",", replacement = "", CashFlow04$`營業活動之淨現金流（流出）`) %>% as.numeric
names(CashFlow04) <- c("營業活動之淨現金流", "投資活動之淨現金流", "籌資活動之淨現金流","發放現金股利", "date", "company")
CashFlow04$`投資活動之淨現金流` <- gsub(pattern = ",", replacement = "", CashFlow04$`投資活動之淨現金流`) %>% as.numeric
CashFlow04$營業活動之淨現金流 <- gsub(pattern = ",", replacement = "", CashFlow04$營業活動之淨現金流) %>% as.numeric
CashFlow04$籌資活動之淨現金流 <- gsub(pattern = ",", replacement = "", CashFlow04$籌資活動之淨現金流) %>% as.numeric
CashFlow04$發放現金股利 <- gsub(pattern = ",", replacement = "", CashFlow04$發放現金股利) %>% as.numeric
sqlSave(LOCAL, CashFlow04, tablename = "CashFlow04", rownames = FALSE, append = TRUE)
#---Qry---#
library(RODBC)
LOCAL<-odbcConnect("LOCAL")
sqlSave(LOCAL, CashFlow04, tablename = "CashFlow04", rownames = FALSE, append = TRUE)
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）","　發放現金股利")     dateIndex <- 0;     listall <- list();     for (i in 2:2) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")                     },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             print(Source)                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(3:4, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
library(rvest)
library(httr)
library(magrittr)
#library(sqldf)
library(ggplot2)
library(jsonlite)
CashFlow03 <- Getcfreport();
CashFlow03 <- Getcfreport();
tempt <- CashFlow03
CashFlow03$date <- 8
names(CashFlow03) <- c("營業活動之淨現金流", "投資活動之淨現金流", "籌資活動之淨現金流","發放現金股利", "date", "company")
CashFlow03$發放現金股利 <- gsub(pattern = ",", replacement = "", CashFlow03$發放現金股利) %>% as.numeric
CashFlow03$籌資活動之淨現金流 <- gsub(pattern = ",", replacement = "", CashFlow03$籌資活動之淨現金流) %>% as.numeric
CashFlow03$投資活動之淨現金流 <- gsub(pattern = ",", replacement = "", CashFlow03$投資活動之淨現金流) %>% as.numeric
CashFlow03$營業活動之淨現金流 <- gsub(pattern = ",", replacement = "", CashFlow03$營業活動之淨現金流) %>% as.numeric
"  13443  "%>% as.numeric
"  13443  "%>% as.numeric +1
sqlSave(LOCAL, CashFlow03, tablename = "CashFlow03", rownames = FALSE, append = TRUE)
library(RODBC)
LOCAL<-odbcConnect("LOCAL")
sqlSave(LOCAL, CashFlow03, tablename = "CashFlow03", rownames = FALSE, append = TRUE)
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）","　發放現金股利")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")                     },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             print(Source)                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(3:4, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
library(rvest)
library(httr)
library(magrittr)
#library(sqldf)
library(ggplot2)
library(jsonlite)
CashFlow02 <- Getcfreport();
CashFlow02 <- Getcfreport();
library(rvest) library(httr) library(magrittr) #library(sqldf) library(ggplot2) library(jsonlite)
Getcfreport <- function() {     Parameter <- c("營業活動之淨現金流入（流出）", "　投資活動之淨現金流入（流出）", "　籌資活動之淨現金流入（流出）","　發放現金股利")     dateIndex <- 0;     listall <- list();     for (i in 1:1) {         #5           closeAllConnections();             year <- 101 + i;             dateIndex <- dateIndex + 1;             if (TRUE) {                 bsURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb04?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=04");                     tryCatch(Source <- read_html(bsURL, encoding = "UTF-8"),                     error = function(e) { print("Allerror");                         Sys.sleep(sample(10:10, size = 1));                         closeAllConnections();                         bsURL <- RETRY("GET", bsURL, times = 5, pause_base = 1, pause_cap = 60, quiet = FALSE);                         Source <- read_html(bsURL, encoding = "UTF-8")                     },                     finally = print(year))                 All <- Source %>% html_nodes(css = ".odd td , .hasBorder:nth-child(2) , .even td , th") %>% html_text;                 if (length(All) == 0) break;                 Index <- grep(pattern = "[0-9]{4}", All);                 Company <- All[Index];                 for (company in Company) {                     cfURL<-paste0("http://mops.twse.com.tw/mops/web/ajax_t164sb05?=1&id=&key=&TYPEK=sii&step=2&year=",year,"&season=4&co_id=",company,"&firstin=1")                     tryCatch(Source <- read_html(cfURL, encoding = "UTF-8"),                         error = function(e) {                             print(Source)                             closeAllConnections();                             print(paste(company, "Companyerror"));                             Sys.sleep(sample(10:10, size = 1));                             RETRY("GET", cfURL, pause_base = 1, pause_cap = 60, quiet = FALSE);                             Source <- read_html(cfURL, encoding = "UTF-8")                         },                         finally = print(company))                     rowname <- Source %>% html_nodes(css = ".hasBorder td:nth-child(1)") %>% html_text;                     amount <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                     result <- data.frame()                     result <- rbind(result, as.data.frame(t(amount)))                     colnames(result) <- rowname;                     if (length(result) <= 2) {                         Sys.sleep(sample(3:3, size = 1));                         print(paste("length",Source));                         next;                     }                     tryCatch(result <- result[, Parameter], error = function(e) { print(paste("DataEmptyError:", company));print("Select") }, finally = { print(length(result)) })                     result[, "date"] <- dateIndex;                     result[, "company"] <- company;                     tryCatch(listall <- rbind(listall, result), error = function(e) { print("rbind")})                     Sys.sleep(sample(3:4, size = 1));                 }                 Sys.sleep(sample(2:5, size = 1));         }     }     return(listall) }
CashFlow02 <- Getcfreport();
CashFlow02 <- Getcfreport();
tempt <- CashFlow02
CashFlow02$date <- 4
names(CashFlow02) <- c("營業活動之淨現金流", "投資活動之淨現金流", "籌資活動之淨現金流","發放現金股利", "date", "company")
CashFlow02$營業活動之淨現金流 <- gsub(pattern = ",", replacement = "", CashFlow02$營業活動之淨現金流) %>% as.numeric
CashFlow02$投資活動之淨現金流 <- gsub(pattern = ",", replacement = "", CashFlow02$投資活動之淨現金流) %>% as.numeric
CashFlow02$籌資活動之淨現金流 <- gsub(pattern = ",", replacement = "", CashFlow02$籌資活動之淨現金流) %>% as.numeric
CashFlow02$發放現金股利 <- gsub(pattern = ",", replacement = "", CashFlow02$發放現金股利) %>% as.numeric
sqlSave(LOCAL, CashFlow02, tablename = "CashFlow02", rownames = FALSE, append = TRUE)
library(RODBC)
LOCAL<-odbcConnect("LOCAL")
sqlSave(LOCAL, CashFlow02, tablename = "CashFlow02", rownames = FALSE, append = TRUE)
library(RODBC)
library(magrittr)
LOCAL<-odbcConnect("LOCAL")
Cash02 <- LOCAL %>% sqlQuery("SELECT *  FROM [master].[dbo].[CashFlow02]")
Cash03 <- LOCAL %>% sqlQuery("SELECT *  FROM [master].[dbo].[CashFlow03]")
Cash04 <- LOCAL %>% sqlQuery("SELECT *  FROM [master].[dbo].[CashFlow04]")
Cash05 <- LOCAL %>% sqlQuery("SELECT *  FROM [master].[dbo].[CashFlow05]")
CF<-rbind(Cash02, Cash03, Cash04, Cash05)
for (i in 1:6) { QryBS <- paste0("Select * from [master].[dbo].[Balance Sheet_",i,"]") QryIS <-paste0("Select * from [master].[dbo].[Income Statement_",i,"]") QryCF<-"Select * from [master].[dbo].[Cash Flow]" BS<-LOCAL %>% sqlQuery(QryBS) IS <- LOCAL %>% sqlQuery(QryIS) #CF <- LOCAL %>% sqlQuery(QryCF) m1 <- merge(CF, BS, by.x = c("date", "company"), by.y = c("date", "公司代號")) m2 <- merge(m1, IS, by.x = c("date", "company"), by.y = c("date", "公司代號")) sqlSave(LOCAL, m2, tablename = paste0("Aggregate_",i,"_New"), rownames = FALSE, append = TRUE) }
Cash02 <- LOCAL %>% sqlQuery("SELECT *  FROM [master].[dbo].[CashFlow02]")
Cash03 <- LOCAL %>% sqlQuery("SELECT *  FROM [master].[dbo].[CashFlow03]")
Cash04 <- LOCAL %>% sqlQuery("SELECT *  FROM [master].[dbo].[CashFlow04]")
Cash05 <- LOCAL %>% sqlQuery("SELECT *  FROM [master].[dbo].[CashFlow05]")
CF[,"自由現金流"]<-CF$`營業活動之淨現金流`+CF$`投資活動之淨現金流`
CF
for (i in 1:6) { QryBS <- paste0("Select * from [master].[dbo].[Balance Sheet_",i,"]") QryIS <-paste0("Select * from [master].[dbo].[Income Statement_",i,"]") QryCF<-"Select * from [master].[dbo].[Cash Flow]" BS<-LOCAL %>% sqlQuery(QryBS) IS <- LOCAL %>% sqlQuery(QryIS) #CF <- LOCAL %>% sqlQuery(QryCF) m1 <- merge(CF, BS, by.x = c("date", "company"), by.y = c("date", "公司代號")) m2 <- merge(m1, IS, by.x = c("date", "company"), by.y = c("date", "公司代號")) sqlSave(LOCAL, m2, tablename = paste0("Aggregate_",i,"_New"), rownames = FALSE, append = TRUE) }
Qry1 <- "SELECT  date,company,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額稅後]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額稅後]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法    FROM [master].[dbo].[Aggregate_1_New]  " Qry2 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益合計] as CoOE 	  ,[本期綜合損益總額]/[權益合計] as ROE 	  ,[自由現金流]/[權益合計] as CfOE       ,-[發放現金股利]/[權益合計] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益合計]/0.08) as K值法       ,-[發放現金股利]/[權益合計] *[每股參考淨值]/0.06 as 股利法      FROM [master].[dbo].[Aggregate_2_New] " Qry3 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法        FROM [master].[dbo].[Aggregate_3_New]" Qry4 <- "SELECT   date,company, 	    [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法     ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法          FROM [master].[dbo].[Aggregate_4_New] " Qry5 <- "SELECT   date,company, 	     [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE         ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法            FROM [master].[dbo].[Aggregate_5_New]" Qry6 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE         ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法      ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法              FROM [master].[dbo].[Aggregate_6_New]"
R1 <- LOCAL %>% sqlQuery(Qry1)
R2 <- LOCAL %>% sqlQuery(Qry2)
R3 <- LOCAL %>% sqlQuery(Qry3)
R4 <- LOCAL %>% sqlQuery(Qry4)
R5 <- LOCAL %>% sqlQuery(Qry5)
R6 <- LOCAL %>% sqlQuery(Qry6)
All <- rbind(R1, R2, R3, R4, R5, R6)
(All$`股利密度`>0.2) %>% All[.,]
test<-(All$`股利密度`>0.2) %>% All[.,]
test<-(All$`股利密度`>0.15) %>% All[.,]
library(RODBC)
library(magrittr)
LOCAL <- odbcConnect("LOCAL")
Qry1 <- "SELECT  date,company,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額稅後]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額稅後]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法    FROM [master].[dbo].[Aggregate_1_New]  " Qry2 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益合計] as CoOE 	  ,[本期綜合損益總額]/[權益合計] as ROE 	  ,[自由現金流]/[權益合計] as CfOE       ,-[發放現金股利]/[權益合計] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益合計]/0.08) as K值法       ,-[發放現金股利]/[權益合計] *[每股參考淨值]/0.06 as 股利法      FROM [master].[dbo].[Aggregate_2_New] " Qry3 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法        FROM [master].[dbo].[Aggregate_3_New]" Qry4 <- "SELECT   date,company, 	    [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法     ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法          FROM [master].[dbo].[Aggregate_4_New] " Qry5 <- "SELECT   date,company, 	     [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE         ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法            FROM [master].[dbo].[Aggregate_5_New]" Qry6 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE         ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法      ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法              FROM [master].[dbo].[Aggregate_6_New]" R1 <- LOCAL %>% sqlQuery(Qry1) R2 <- LOCAL %>% sqlQuery(Qry2) R3 <- LOCAL %>% sqlQuery(Qry3) R4 <- LOCAL %>% sqlQuery(Qry4) R5 <- LOCAL %>% sqlQuery(Qry5) R6 <- LOCAL %>% sqlQuery(Qry6) All <- rbind(R1, R2, R3, R4, R5, R6)
test<-(All$`股利密度`>0.15) %>% All[.,]
library(RODBC)
library(ggplot2)
library(magrittr)
DrawResultROE(R1, "ROE")
DrawResultROE(R2, "ROE")
DrawResult <- function(Sheet,Sheettype) {     for (Companytype in Sheet) {         for (Company in unique(Companytype$公司代號)) {             for (Colname in colnames(Companytype)) {                 if (Colname == "公司代號" || Colname == "date") next                 qplot(Companytype[Companytype$公司代號 == Company,]$date, Companytype[Companytype$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)                 ggsave(paste0("Company_", Company, "_", "Index_", Colname, ".png"), path = paste0("C:/Users/user/Investment Plan/StockMarket/",Sheettype))                 unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"))             }         }     } } DrawResultCF <- function(Sheet, Sheettype) {         for (Company in unique(Sheet$公司代號)) {             for (Colname in colnames(Sheet)) {                 if (Colname == "公司代號" || Colname == "date") next                 qplot(Sheet[Sheet$公司代號 == Company,]$date, Sheet[Sheet$公司代號 == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)                 ggsave(paste0("Company_", Company, "_", "Index_", Colname, ".png"), path = paste0("C:/Users/user/Documents/StockMarket/", Sheettype))                 unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"))             }         } } DrawResultROE <- function(Sheet, Sheettype) {     for (Company in unique(Sheet$company)) {         for (Colname in colnames(Sheet)) {             if (!(Colname == "CoOE" || Colname == "ROE" || Colname=="CfOE")) next             qplot(Sheet[Sheet$company == Company,]$date, Sheet[Sheet$company == Company,][, c(Colname)], geom = c("point", "line")) + ggtitle(paste(Company, " ", Colname)) + labs(x = "Date", y = Colname)             ggsave(paste0("Company_", Company, "_", "Index_", Colname, ".png"), path = paste0("C:/Users/user/Documents/Investment Plan/StockMarket/", Sheettype))             unlink(paste0("Company_", Company, "_", "Index_", Colname, ".png"))         }     } }
DrawResultROE(R1, "ROE")
DrawResultROE(R2, "ROE")
Qry1 <- "SELECT  date,company,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額稅後]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額稅後]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法    FROM [master].[dbo].[Aggregate_1_New]  " Qry2 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益合計] as CoOE 	  ,[本期綜合損益總額]/[權益合計] as ROE 	  ,[自由現金流]/[權益合計] as CfOE       ,-[發放現金股利]/[權益合計] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益合計]/0.08) as K值法       ,-[發放現金股利]/[權益合計] *[每股參考淨值]/0.06 as 股利法      FROM [master].[dbo].[Aggregate_2_New] " Qry3 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法        FROM [master].[dbo].[Aggregate_3_New]" Qry4 <- "SELECT   date,company, 	    [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法     ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法          FROM [master].[dbo].[Aggregate_4_New] " Qry5 <- "SELECT   date,company, 	     [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE         ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法            FROM [master].[dbo].[Aggregate_5_New]" Qry6 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE         ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法      ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法              FROM [master].[dbo].[Aggregate_6_New]" R1 <- LOCAL %>% sqlQuery(Qry1) R2 <- LOCAL %>% sqlQuery(Qry2) R3 <- LOCAL %>% sqlQuery(Qry3) R4 <- LOCAL %>% sqlQuery(Qry4) R5 <- LOCAL %>% sqlQuery(Qry5) R6 <- LOCAL %>% sqlQuery(Qry6) All <- rbind(R1, R2, R3, R4, R5, R6)
LOCAL <- odbcConnect("LOCAL")
Qry1 <- "SELECT  date,company,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額稅後]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額稅後]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法    FROM [master].[dbo].[Aggregate_1_New]  " Qry2 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益合計] as CoOE 	  ,[本期綜合損益總額]/[權益合計] as ROE 	  ,[自由現金流]/[權益合計] as CfOE       ,-[發放現金股利]/[權益合計] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益合計]/0.08) as K值法       ,-[發放現金股利]/[權益合計] *[每股參考淨值]/0.06 as 股利法      FROM [master].[dbo].[Aggregate_2_New] " Qry3 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法        FROM [master].[dbo].[Aggregate_3_New]" Qry4 <- "SELECT   date,company, 	    [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法     ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法          FROM [master].[dbo].[Aggregate_4_New] " Qry5 <- "SELECT   date,company, 	     [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE         ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法            FROM [master].[dbo].[Aggregate_5_New]" Qry6 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE         ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法      ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法              FROM [master].[dbo].[Aggregate_6_New]" R1 <- LOCAL %>% sqlQuery(Qry1) R2 <- LOCAL %>% sqlQuery(Qry2) R3 <- LOCAL %>% sqlQuery(Qry3) R4 <- LOCAL %>% sqlQuery(Qry4) R5 <- LOCAL %>% sqlQuery(Qry5) R6 <- LOCAL %>% sqlQuery(Qry6) All <- rbind(R1, R2, R3, R4, R5, R6)
All
Qry1 <- "SELECT  date,company,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額稅後]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額稅後]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法       ,[負債總額]/[資產總額] as 負債比例 FROM [master].[dbo].[Aggregate_1_New]  " Qry2 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益合計] as CoOE 	  ,[本期綜合損益總額]/[權益合計] as ROE 	  ,[自由現金流]/[權益合計] as CfOE       ,-[發放現金股利]/[權益合計] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益合計]/0.08) as K值法       ,-[發放現金股利]/[權益合計] *[每股參考淨值]/0.06 as 股利法       ,[負債總額]/[資產總額] as 負債比例 FROM [master].[dbo].[Aggregate_2_New] " Qry3 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法       ,[負債總額]/[資產總額] as 負債比例 FROM [master].[dbo].[Aggregate_3_New]" Qry4 <- "SELECT   date,company, 	    [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法       ,[負債總額]/[資產總額] as 負債比例 FROM [master].[dbo].[Aggregate_4_New] " Qry5 <- "SELECT   date,company, 	     [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE         ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法       ,[負債總額]/[資產總額] as 負債比例 FROM [master].[dbo].[Aggregate_5_New]" Qry6 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE         ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法      ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法       ,[負債總額]/[資產總額] as 負債比例   FROM [master].[dbo].[Aggregate_6_New]"
library(RODBC)
library(ggplot2)
library(magrittr)
LOCAL <- odbcConnect("LOCAL")
R1 <- LOCAL %>% sqlQuery(Qry1)
R2 <- LOCAL %>% sqlQuery(Qry2)
R3 <- LOCAL %>% sqlQuery(Qry3)
R4 <- LOCAL %>% sqlQuery(Qry4)
R5 <- LOCAL %>% sqlQuery(Qry5)
R6 <- LOCAL %>% sqlQuery(Qry6)
All <- rbind(R1, R2, R3, R4, R5, R6)
All
plot(All$ROE,All$`負債比例`)
plot(All[All$date == 16,]$ROE, All[All$date == 16,]$`負債比例`)
plot(All[All$date == 16 & All$`負債比例` < 0.5,]$ROE, All[All$date == 16 & All$`負債比例` < 0.5,]$`負債比例`)
library(RODBC)
library(ggplot2)
library(magrittr)
LOCAL <- odbcConnect("LOCAL")
Qry1 <- "SELECT  date,company,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額稅後]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額稅後]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法       ,[負債總額]/[資產總額] as 負債比例 FROM [master].[dbo].[Aggregate_1_New]  " Qry2 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益合計] as CoOE 	  ,[本期綜合損益總額]/[權益合計] as ROE 	  ,[自由現金流]/[權益合計] as CfOE       ,-[發放現金股利]/[權益合計] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益合計]/0.08) as K值法       ,-[發放現金股利]/[權益合計] *[每股參考淨值]/0.06 as 股利法       ,[負債總額]/[資產總額] as 負債比例 FROM [master].[dbo].[Aggregate_2_New] " Qry3 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法       ,[負債總額]/[資產總額] as 負債比例 FROM [master].[dbo].[Aggregate_3_New]" Qry4 <- "SELECT   date,company, 	    [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法       ,[負債總額]/[資產總額] as 負債比例 FROM [master].[dbo].[Aggregate_4_New] " Qry5 <- "SELECT   date,company, 	     [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE         ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法       ,[負債總額]/[資產總額] as 負債比例 FROM [master].[dbo].[Aggregate_5_New]" Qry6 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE         ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法      ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法       ,[負債總額]/[資產總額] as 負債比例   FROM [master].[dbo].[Aggregate_6_New]"
R1 <- LOCAL %>% sqlQuery(Qry1) R2 <- LOCAL %>% sqlQuery(Qry2) R3 <- LOCAL %>% sqlQuery(Qry3) R4 <- LOCAL %>% sqlQuery(Qry4) R5 <- LOCAL %>% sqlQuery(Qry5) R6 <- LOCAL %>% sqlQuery(Qry6) All <- rbind(R1, R2, R3, R4, R5, R6)
library(RODBC)
library(ggplot2)
library(magrittr)
LOCAL <- odbcConnect("LOCAL")
Qry1 <- "SELECT  date,company,[營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額稅後]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額稅後]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法       ,[負債總額]/[資產總額] as 負債比例 FROM [master].[dbo].[Aggregate_1_New]  " Qry2 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益合計] as CoOE 	  ,[本期綜合損益總額]/[權益合計] as ROE 	  ,[自由現金流]/[權益合計] as CfOE       ,-[發放現金股利]/[權益合計] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益合計]/0.08) as K值法       ,-[發放現金股利]/[權益合計] *[每股參考淨值]/0.06 as 股利法       ,[負債總額]/[資產總額] as 負債比例 FROM [master].[dbo].[Aggregate_2_New] " Qry3 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	  ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法       ,[負債總額]/[資產總額] as 負債比例 FROM [master].[dbo].[Aggregate_3_New]" Qry4 <- "SELECT   date,company, 	    [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE       ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法       ,[負債總額]/[資產總額] as 負債比例 FROM [master].[dbo].[Aggregate_4_New] " Qry5 <- "SELECT   date,company, 	     [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE         ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法       ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法       ,[負債總額]/[資產總額] as 負債比例 FROM [master].[dbo].[Aggregate_5_New]" Qry6 <- "SELECT   date,company, 	  [營業活動之淨現金流]/[權益總額] as CoOE 	  ,[本期綜合損益總額]/[權益總額] as ROE 	  ,[自由現金流]/[權益總額] as CfOE         ,-[發放現金股利]/[權益總額] as 股利密度 	   ,14*[基本每股盈餘元] as 本益比法 	  ,[每股參考淨值]*([本期綜合損益總額]/[權益總額]/0.08) as K值法      ,-[發放現金股利]/[權益總額] *[每股參考淨值]/0.06 as 股利法       ,[負債總額]/[資產總額] as 負債比例   FROM [master].[dbo].[Aggregate_6_New]"
R1 <- LOCAL %>% sqlQuery(Qry1)
R2 <- LOCAL %>% sqlQuery(Qry2)
R3 <- LOCAL %>% sqlQuery(Qry3)
R4 <- LOCAL %>% sqlQuery(Qry4)
R5 <- LOCAL %>% sqlQuery(Qry5)
R6 <- LOCAL %>% sqlQuery(Qry6)
All <- rbind(R1, R2, R3, R4, R5, R6)
All[All$company='1906',]
All[All$company=='1906',]
`t163sb04_20171015_174553383` <- read.csv(file="C:/Users/user/AppData/Local/Temp/t163sb04_20171015_174553383.csv.utf8", header=TRUE, row.names=NULL, encoding="UTF-8", sep=",", dec=".", quote="'", comment.char="")
Q1 <- "Select [基本每股盈餘元],[權益總額]  FROM [master].[dbo].[Aggregate_1_New] where date='16'"
Q2 <- "Select [基本每股盈餘元],[權益合計] as 權益總額  FROM [master].[dbo].[Aggregate_1_New] where date='16'"
Q3 <- "Select [基本每股盈餘元],[權益總額]  FROM [master].[dbo].[Aggregate_1_New] where date='16' "
Q4 <- "Select [基本每股盈餘元],[權益總額]  FROM [master].[dbo].[Aggregate_1_New] where date='16'"
Q5 <- "Select [基本每股盈餘元],[權益總額]  FROM [master].[dbo].[Aggregate_1_New] where date='16'"
Q6 <- "Select [基本每股盈餘元],[權益總額]  FROM [master].[dbo].[Aggregate_1_New] where date='16'"
R1 <- LOCAL %>% sqlQuery(Qry1)
R2 <- LOCAL %>% sqlQuery(Qry2)
library(RODBC)
library(ggplot2)
library(magrittr)
R1 <- LOCAL %>% sqlQuery(Qry1)
R2 <- LOCAL %>% sqlQuery(Qry2)
LOCAL <- odbcConnect("LOCAL")
R1 <- LOCAL %>% sqlQuery(Qry1)
R1 <- LOCAL %>% sqlQuery(Q1)
R2 <- LOCAL %>% sqlQuery(Q2)
R3 <- LOCAL %>% sqlQuery(Q3)
R4 <- LOCAL %>% sqlQuery(Q4)
R5 <- LOCAL %>% sqlQuery(Q5)
R6 <- LOCAL %>% sqlQuery(Q6)
R6 <- LOCAL %>% sqlQuery(Q6)
R1
R2
LOCAL <- odbcConnect("LOCAL")
Q1 <- "Select [基本每股盈餘元],[權益總額]  FROM [master].[dbo].[Aggregate_1_New] where date='16'"
Q2 <- "Select [基本每股盈餘元],[權益合計] as 權益總額  FROM [master].[dbo].[Aggregate_2_New] where date='16'"
Q3 <- "Select [基本每股盈餘元],[權益總額]  FROM [master].[dbo].[Aggregate_3_New] where date='16' "
Q4 <- "Select [基本每股盈餘元],[權益總額]  FROM [master].[dbo].[Aggregate_4_New] where date='16'"
Q5 <- "Select [基本每股盈餘元],[權益總額]  FROM [master].[dbo].[Aggregate_5_New] where date='16'"
Q6 <- "Select [基本每股盈餘元],[權益總額]  FROM [master].[dbo].[Aggregate_6_New] where date='16'"
R1 <- LOCAL %>% sqlQuery(Q1)
R2 <- LOCAL %>% sqlQuery(Q2)
R3 <- LOCAL %>% sqlQuery(Q3)
R4 <- LOCAL %>% sqlQuery(Q4)
R5 <- LOCAL %>% sqlQuery(Q5)
R6 <- LOCAL %>% sqlQuery(Q6)
R1
R2
Q1 <- "Select company,[基本每股盈餘元],[權益總額]  FROM [master].[dbo].[Aggregate_1_New] where date='16'"
Q2 <- "Select company,[基本每股盈餘元],[權益合計] as 權益總額  FROM [master].[dbo].[Aggregate_2_New] where date='16'"
Q3 <- "Select company,[基本每股盈餘元],[權益總額]  FROM [master].[dbo].[Aggregate_3_New] where date='16' "
Q4 <- "Select company,[基本每股盈餘元],[權益總額]  FROM [master].[dbo].[Aggregate_4_New] where date='16'"
Q5 <- "Select company,[基本每股盈餘元],[權益總額]  FROM [master].[dbo].[Aggregate_5_New] where date='16'"
Q6 <- "Select company,[基本每股盈餘元],[權益總額]  FROM [master].[dbo].[Aggregate_6_New] where date='16'"
R1 <- LOCAL %>% sqlQuery(Q1)
R2 <- LOCAL %>% sqlQuery(Q2)
R3 <- LOCAL %>% sqlQuery(Q3)
R4 <- LOCAL %>% sqlQuery(Q4)
R5 <- LOCAL %>% sqlQuery(Q5)
R6 <- LOCAL %>% sqlQuery(Q6)
odbcCloseAll()
All
All<-rbind(R1,R2,R3,R4,R5,R6)
All
plot(All$`基本每股盈餘元`,All$`權益總額`)
All[All$`基本每股盈餘元`>150,]
All[All$`基本每股盈餘元` > 40 & All$`權益總額` < 76842515,]
All[All$`基本每股盈餘元` > 30 & All$`權益總額` < 76842515,]
All[All$`基本每股盈餘元` > 20 & All$`權益總額` < 76842515,]
All[All$`基本每股盈餘元` > 20 & All$`權益總額` < 400000000,]
All[All$`基本每股盈餘元` > 15 & All$`權益總額` < 400000000,]
All[All$`基本每股盈餘元` < -10 & All$`權益總額` < 400000000,]
library(jsonlite)
source<-"http://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=json&date=20160301&stockNo=0056&_=1514724793134"
fromJSON(source)
result<-fromJSON(source)
library(magrittr)
result %>% class
result$data
result$data %>% as.data.frame
result$data %>% nrow
result$data[24,]
result$data[24,2]
10:17
for (year in 10:17) {     print(year) }
 01:12
m <- c('01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12')
for (year in 10:17) {     for (month in m) {         source <- paste0("http://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=json&date=20",year,month,"01&stockNo=0056&_=1514724793134")         print(source)         Sys.sleep(sample(2:5, size = 1));     } }
result$data[24,2]
result$data %>% nrow
result$data[result$data %>% nrow, 2]
price<-0
i<-0
for (year in 10:17) {     for (month in m) {         source <- paste0("http://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=json&date=20",year,month,"01&stockNo=0056&_=1514724793134")         print(source)         result <- fromJSON(source)         price <- price + result$data[result$data %>% nrow, 2]         i<-i+1         Sys.sleep(sample(2:5, size = 1));     } }
result
price
 result$data[result$data %>% nrow, 2]
result
price + result$data[result$data %>% nrow, 2]
result$data[result$data %>% nrow, 2]
result$data[result$data %>% nrow, 2] %>% as.double
for (year in 10:17) {     for (month in m) {         source <- paste0("http://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=json&date=20",year,month,"01&stockNo=0056&_=1514724793134")         print(source)         result <- fromJSON(source)         price <- price + result$data[result$data %>% nrow, 2] %>% as.double         i<-i+1         Sys.sleep(sample(2:5, size = 1));     } }
price
i
price/i
result$data 
fromJSON(source)
fromJSON(source) %>% .$data
fromJSON(source) %>% .$data[1:nrow(.),] 
fromJSON(source) %>% nrow(.)
fromJSON(source) %>% .$data[1:nrow(.$data),]
fromJSON(source) %>% .$data[,2]
fromJSON(source) %>% .$data
fromJSON(source) %>% .$data %>% as.data.frame
library(tidyverse)
fromJSON(source) %>% .$data %>% as.data.frame %>% select(V2)
fromJSON(source) %>% .$data %>% as.data.frame %>% select(V2) %>% class
fromJSON(source) %>% .$data %>% as.data.frame
fromJSON(source) %>% .$data %>% as.data.frame %>% select(V2) 
fromJSON(source) %>% .$data %>% as.data.frame %>% select(V2) %>% filter() %>% slice(1:n())
fromJSON(source) %>% .$data %>% as.data.frame %>% select(V2) %>% filter() %>% slice(1:n()-1)
fromJSON(source) %>% .$data %>% as.data.frame  %>% filter() %>% slice(1:n()-1)
fromJSON(source) %>% .$data %>% as.data.frame  %>% filter() %>% slice(1:n()-1)
fromJSON(source) %>% .$data %>% as.data.frame   %>% slice(1:n()-1)
fromJSON(source) %>% .$data %>% as.data.frame
fromJSON(source) %>% .$data %>% as.data.frame   %>% slice(1:(n()-1))
Result<-fromJSON(source) %>% .$data %>% as.data.frame   %>% slice(1:(n()-1)) 
Result[0,]
Result<-Result[0,]
Result
for (year in 10:17) {     for (month in m) {         source <- paste0("http://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=json&date=20",year,month,"01&stockNo=0056&_=1514724793134")         print(source)         result <- fromJSON(source) %>% .$data %>% as.data.frame %>% slice(1:(n() - 1))         Result <- rbind(Result, result)         i<-i+1         Sys.sleep(sample(2:5, size = 1));     } }
Result
Result$V2 %>% var
Result$V2 %>% var()
Result$V2 
Result$V2 %>% as.double %>% var
Result$V2 %>% as.double
Result$V2
Result$V2[3]
Result$V2[3] %>% as.double
Result$V2[3] %>% as.double
Result$V2[3]
Result$V2[3] %>% as.integer
Result$V2[3]
Result$V2[3] %>% as.character %>% as.double
Result$V2[3] %>% as.character
Result$V2[3] %>% as.character %>% as.double
Result$V2 %>% as.character %>% as.double 
Result$V2 %>% as.character %>% as.double %>% var
Result$V2 %>% as.character %>% as.double %>% summary
Result$V2 %>% ggplot() %>% geom_histogram
Result$V2 %>% ggplot() %>% geom_histogram()
Result$V2 %>% as.character %>% as.double ggplot() %>% geom_histogram()
Result$V2 %>% as.character %>% as.double %>% ggplot() %>% geom_histogram()
i <- Result$V2 %>% as.character %>% as.double
i%>% ggplot() %>% geom_histogram()
ggplot(data = i) %>% geom_histogram()
i <- Result %>% as.character %>% as.double
ggplot(data = i, mapping = aes(x = V2)) +   geom_freqpoly(binwidth = 1)
i
Result$V2 %<>% as.character %>% as.double 
Result
ggplot(data = i, mapping = aes(x = V2)) +   geom_freqpoly(binwidth = 1)
Result
ggplot(data = Result, mapping = aes(x = V2)) +   geom_freqpoly(binwidth = 1)
ggplot(data = Result, mapping = aes(x = V2)) +   geom_freqpoly(binwidth = 2)
ggplot(data = Result, mapping = aes(x = V2)) +   geom_freqpoly(binwidth = 1)
ggplot(data = Result, mapping = aes(x = V2)) +   geom_freqpoly(binwidth = 0.1)
ggplot(data = Result, mapping = aes(x = V2)) +   geom_freqpoly(binwidth = 0.2)
Result0056<-Result
ggplot(data = Result0056, mapping = aes(x = V2)) +   geom_freqpoly(binwidth = 0.2)
Result<-Result[0,]
for (year in 10:17) {     for (month in m) {         source <- paste0("http://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=json&date=20",year,month,"01&stockNo=0050&_=1514724793134")         print(source)         result <- fromJSON(source) %>% .$data %>% as.data.frame %>% slice(1:(n() - 1))         Result <- rbind(Result, result)         i<-i+1         Sys.sleep(sample(2:5, size = 1));     } }
Result$V2 %<>% as.character %>% as.double
ggplot(data = Result00, mapping = aes(x = V2)) +   geom_freqpoly(binwidth = 0.2)
ggplot(data = Result, mapping = aes(x = V2)) +   geom_freqpoly(binwidth = 0.2)
Result$V2 %>% summary
Result0056$V2 %>% summary
library(jsonlite)
library(magrittr)
library(tidyverse)
m <- c('01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12')
i<-0
price <- 0
price/i
for (year in 10:17) {     for (month in m) {         source <- paste0("http://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=json&date=20",year,month,"01&stockNo=0050&_=1514724793134")         print(source)         result <- fromJSON(source) %>% .$data %>% as.data.frame %>% slice(1:(n() - 1))         Result <- rbind(Result, result)         i<-i+1         Sys.sleep(sample(2:5, size = 1));     } }
Result<-data.frame()
Result
i<-0
for (year in 10:17) {     for (month in m) {         source <- paste0("http://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=json&date=20",year,month,"01&stockNo=0050&_=1514724793134")         print(source)         result <- fromJSON(source) %>% .$data %>% as.data.frame %>% slice(1:(n() - 1))         Result <- rbind(Result, result)         i<-i+1         Sys.sleep(sample(2:5, size = 1));     } }
Result
Result %>% head
Result$V2 %>% mean
Result$V2 %>% class
Result$V2 %>% class
Result$V2
Result$V2 %>% as.character %>% as.double
Result$V2 %>% as.character %>% as.double %>% mean
Result$V2 %>% as.character %>% as.double %>% var
Result$V2 %>% as.character %>% as.double %>% var %>% sqrt
Result$V2 %>% as.character %>% as.double %>% var %>% sd
Result$V2 %>% as.character %>% as.double %>%  sd
Result<-data.frame()
for (year in 10:17) {     for (month in m) {         source <- paste0("http://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=json&date=20",year,month,"01&stockNo=0056&_=1514724793134")         print(source)         result <- fromJSON(source) %>% .$data %>% as.data.frame %>% slice(1:(n() - 1))         Result <- rbind(Result, result)         i<-i+1         Sys.sleep(sample(2:5, size = 1));     } }
Result$V2 %>% as.character %>% as.double %>% mean
Result$V2 %>% as.character %>% as.double %>%  sd
library(jsonlite)
library(magrittr)
library(tidyverse)
m <- c('01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12')
i<-0
price <- 0
Result<-data.frame()
for (year in 15:17) {     for (month in m) {         source <- paste0("http://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=json&date=20",year,month,"01&stockNo=5434&_=1514724793134")         print(source)         result <- fromJSON(source) %>% .$data %>% as.data.frame %>% slice(1:(n() - 1))         Result <- rbind(Result, result)         i<-i+1         Sys.sleep(sample(2:5, size = 1));     } }
Result$V2 %>% as.character %>% as.double %>% mean
Result
Result %>% filter(V1>'104/12/31') %>% as.character %>% as.double %>% mean
Result %>% filter(V1 > '104/12/31') %>% select(V2) %>% as.character %>% as.double %>% mean
Result %>% filter(V1 > '104/12/31')
Result$V1
Result$V1 %<>% as.character
Result %>% filter(V1 > '104/12/31') %>% select(V2) %>% as.character %>% as.double %>% mean
Result %>% filter(V1 > '104/12/31') 
Result %>% filter(V1 > '104/12/31') %>% select(V2)
Result %>% filter(V1 > '104/12/31') %>% select(V2) %>% as.character 
Result %>% filter(V1 > '104/12/31') %>% select(V2)  %>% as.double %>% mean
Result %>% filter(V1 > '104/12/31') %>% select(V2) %>% mean
Result %>% filter(V1 > '104/12/31') %>% select(V2) %>% as.character
Result %>% filter(V1 > '104/12/31') %>% select(V2) 
Result %>% filter(V1 > '104/12/31') %>% select(V2) %>% .[,'V2']
Result %>% filter(V1 > '104/12/31') %>% select(V2) %>% .[, 'V2'] %>% as.character %>% as.double %>% mean
Result %>% filter(V1 > '105/12/31') %>% select(V2) %>% .[, 'V2'] %>% as.character %>% as.double %>% mean
Result %>% filter(V1 > '106/12/31') %>% select(V2) %>% .[, 'V2'] %>% as.character %>% as.double %>% mean
Result %>% filter(V1 > '106/01/31') %>% select(V2) %>% .[, 'V2'] %>% as.character %>% as.double %>% mean
library(jsonlite) library(magrittr) library(tidyverse) source <- "http://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=json&date=20160301&stockNo=0050&_=1514724793134" m <- c('01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12') i<-0 price <- 0 Result<-data.frame() for (year in 15:17) {     for (month in m) {         source <- paste0("http://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=json&date=20",year,month,"01&stockNo=2897&_=1514724793134")         print(source)         result <- fromJSON(source) %>% .$data %>% as.data.frame %>% slice(1:(n() - 1))         Result <- rbind(Result, result)         i<-i+1         Sys.sleep(sample(2:5, size = 1));     } }
Result
i<-0 price <- 0 Result<-data.frame() for (year in 17:17) {     for (month in m) {         source <- paste0("http://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=json&date=20",year,month,"01&stockNo=2897&_=1514724793134")         print(source)         result <- fromJSON(source) %>% .$data %>% as.data.frame %>% slice(1:(n() - 1))         Result <- rbind(Result, result)         i<-i+1         Sys.sleep(sample(2:5, size = 1));     } }
Result
Result %>% filter(V1 > '106/01/31') %>% select(V2) %>% .[, 'V2'] %>% as.character %>% as.double %>% mean
Result$V1 %<>% as.character %>% as.double %>% mean
Result$V1
Result$V2
Result$V2 %>% as.character %>% as.double
Result$V2 %>% as.character %>% as.double %>% mean
Result$V2 %>% as.character %>% as.double %>%  sd
library(jsonlite)
library(magrittr)
library(tidyverse)
m <- c('01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12')
i<-0
price <- 0
Result<-data.frame()
for (year in 15:17) {     for (month in m) {         source <- paste0("http://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=json&date=20",year,month,"01&stockNo=5434&_=1514724793134")         print(source)         result <- fromJSON(source) %>% .$data %>% as.data.frame %>% slice(1:(n() - 1))         Result <- rbind(Result, result)         i<-i+1         Sys.sleep(sample(2:5, size = 1));     } }
source <- "http://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=json&date=20160301&stockNo=0050&_=1514724793134"
fromJSON(source) 
fromJSON(source) %>% .$data 
 fromJSON(source) %>% .$data %>% as.data.frame 
source <- "http://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=json&date=20160301&stockNo=00510&_=1514724793134"
 fromJSON(source)
 fromJSON(source) %>% .$data
 fromJSON(source) %>% .$data %>% as.data.frame
 fromJSON(source) %>% .$data %>% as.data.frame %>% slice(1:(n() - 1))
        result <- fromJSON(source) %>% .$data %>% as.data.frame %>% slice(1:(n() - 1))
        result %>% nrow
source <- "http://www.twse.com.tw/exchangeReport/STOCK_DAY_AVG?response=json&date=20160301&stockNo=0050&_=1514724793134"
        result <- fromJSON(source) %>% .$data %>% as.data.frame %>% slice(1:(n() - 1))
        result %>% nrow
StockList<-"http://www.tse.com.tw/company/newlisting?response=json&yy=&_=1517021364574"
fromJSON(StockList)
fromJSON(StockList) %>% str
fromJSON(StockList) %>% .$data
fromJSON(StockList) %>% .$data %>% as.tibble
library(tidyverse)
fromJSON(StockList) %>% .$data %>% as.data.frame
fromJSON(StockList)
fromJSON(StockList) %>% str
fromJSON(StockList) %>% select(fields)
StockList <- fromJSON(StockList) %>% .$data[1]
 fromJSON(StockList) %>% .$data
StockList <- fromJSON(StockList) %>% .$data[1,]
StockList <- fromJSON(StockList) %>% .$data %>% as.data.frame %>% .[1,]
StockList
fromJSON(StockList) %>% .$data[,1]
fromJSON(StockList)
StockListSource<-"http://www.tse.com.tw/company/newlisting?response=json&yy=&_=1517021364574"
 fromJSON(StockListSource)
fromJSON(StockListSource) %>% .$data[,1]
StockList <- fromJSON(StockListSource) %>% .$data %>% as.data.frame %>% .[,1]
StockList
StockList <- fromJSON(StockListSource) %>% .$data %>% as.data.frame %>% .[,1] %>% unique
StockList
ListURL<-"http://mops.twse.com.tw/mops/web/ajax_t51sb01?=1&step=1&firstin=1&TYPEK=sii&code="
read_html(ListURL, encoding = "UTF-8")
library(httr)
library(rvest)
read_html(ListURL, encoding = "UTF-8")
GetReviewReport <- function() {     Result <- data.frame(company = 0, companyN = 0, comment = 0, date = 0, type = 0);     Result <- Result[0,];     for (i in 1:5) {         #5         for (j in 1:4) {             #4             year <- 101 + i;             season <- j;             date <- as.numeric(paste0(year, season));             if (TRUE) {                 reviewURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb14?1&step=1&firstin=1&off=1&TYPEK=sii&year=", year, "&season=0", season, "");                 Source <- read_html(reviewURL, encoding = "UTF-8");                 CompanyR <- Source %>% html_nodes(css = "td:nth-child(1)") %>% html_text;                 Length <- length(CompanyR);                 if (Length == 0) break;                 CompanyNR <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;                 CommentR <- Source %>% html_nodes(css = "td:nth-child(7)") %>% html_text;                 result <- data.frame(company = c(1:Length), companyN = c(1:Length), comment = c(1:Length), date = c(1:Length), type = c(1:Length));                 result$company <- CompanyR;                 result$companyN <- CompanyNR;                 result$comment <- CommentR;                 result$date <- date;                 if (j == 4) { result$type <- 'Year'; } else { result$type <- 'Season'; }                 Result <- rbind(Result, result);                 Sys.sleep(sample(2:5, size = 1));             }         }     }     Result$comment <- trimws(Result$comment);     #Result <- Result[Result$comment == '無保留意見',];     return(Result) }
ReviewReport<- GetReviewReport()
ReviewReport<- GetReviewReport()
ReviewReport
ReviewReport$company %>% unique
ReviewReport$companyN %>% unique
ReviewReport %>% select(company,companyR) %>%  unique
ReviewReport %>% select(company,companyN) %>%  unique
ReviewReport %>% select(company,companyN) %>%  unique %>% nrow
StockListSource <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb14?1&step=1&firstin=1&off=1&TYPEK=sii&year=105&season=04");
Source <- read_html(reviewURL, encoding = "UTF-8")
StockListURL <- paste0("http://mops.twse.com.tw/mops/web/ajax_t163sb14?1&step=1&firstin=1&off=1&TYPEK=sii&year=105&season=04");
Source <- read_html(StockListURL, encoding = "UTF-8")
CompanyIndex <- Source %>% html_nodes(css = "td:nth-child(1)") %>% html_text;
CompanyIndex 
CompanyNR <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
CompanyNR
CompanyName <- Source %>% html_nodes(css = "td:nth-child(2)") %>% html_text;
CompanyName 
StockList <- data.frame(CompanyIndex,CompanyName)
StockList 
